/*
 * App URI: template/common/validation/freeformvalidation
 * Source Location: template/common/validation/freeformvalidation.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("template/common/validation/freeformvalidation", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			//공통 Util
			var comUtil = createComUtil(app);
			
			/*
			 * "초기화" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick2(/* cpr.events.CMouseEvent */ e){
			
				var dm = app.lookup("dm1");
				dm.clear();
				
				app.lookup("freeform").redraw();
				
			}
			
			/*
			 * "검증" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick3(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var button = e.control;
				
				// 프리폼 alidation을 실행
				var valid = comUtil.validate("freeform");
				if(valid == true) {
					comUtil.alert("검증을 통과하였습니다.");
				}
			}
			
			/*
			 * 인풋 박스에서 value-change 이벤트 발생 시 호출.
			 * 변경된 value가 저장된 후에 발생하는 이벤트.
			 */
			function onIpb5ValueChange(/* cpr.events.CValueChangeEvent */ e){
				/** 
				 * @type cpr.controls.InputBox
				 */
				var ipb5 = e.control;
			
				// 컨트롤의 입력 값을 보정합니다.
				comUtil.revise(ipb5);
			}
			
			/*
			 * 인풋 박스에서 value-change 이벤트 발생 시 호출.
			 * 변경된 value가 저장된 후에 발생하는 이벤트.
			 */
			function onIpb3ValueChange(/* cpr.events.CValueChangeEvent */ e){
				/** 
				 * @type cpr.controls.InputBox
				 */
				var ipb3 = e.control;
				
				// 컨트롤의 입력 값을 보정합니다.
				comUtil.revise(ipb3);
			};
			// End - User Script
			
			// Header
			app.declareBindableAppProperty("title", null);
			var dataMap_1 = new cpr.data.DataMap("dm1");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "column1",
						"defaultValue": "홍길동"
					},
					{
						"name": "column2",
						"defaultValue": "honggildong@yahoo.com"
					},
					{
						"name": "column3",
						"defaultValue": "data3"
					},
					{
						"name": "column4",
						"defaultValue": "data4"
					},
					{
						"name": "column5",
						"defaultValue": "data5"
					}
				]
			});
			app.register(dataMap_1);
			
			app.supportMedia("all", "default");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container();
			// Layout
			var formLayout_1 = new cpr.controls.layouts.FormLayout();
			formLayout_1.setColumns(["1fr"]);
			formLayout_1.setRows(["25px", "1fr"]);
			group_1.setLayout(formLayout_1);
			(function(container){
				var group_2 = new cpr.controls.Container();
				// Layout
				var formLayout_2 = new cpr.controls.layouts.FormLayout();
				formLayout_2.setColumns(["1fr", "100px", "100px", "100px", "100px", "100px"]);
				formLayout_2.setRows(["1fr"]);
				group_2.setLayout(formLayout_2);
				(function(container){
					var button_1 = new cpr.controls.Button();
					button_1.value = "초기화";
					if(typeof onButtonClick2 == "function") {
						button_1.addEventListener("click", onButtonClick2);
					}
					container.addChild(button_1, {
						"colIndex": 4,
						"rowIndex": 0
					});
					var button_2 = new cpr.controls.Button();
					button_2.value = "검증";
					if(typeof onButtonClick3 == "function") {
						button_2.addEventListener("click", onButtonClick3);
					}
					container.addChild(button_2, {
						"colIndex": 5,
						"rowIndex": 0
					});
				})(group_2);
				container.addChild(group_2, {
					"colIndex": 0,
					"rowIndex": 0
				});
				var group_3 = new cpr.controls.Container("freeform");
				// Layout
				var formLayout_3 = new cpr.controls.layouts.FormLayout();
				formLayout_3.setColumns(["150px", "1fr", "150px", "1fr"]);
				formLayout_3.setUseColumnShade(0, true);
				formLayout_3.setUseColumnShade(2, true);
				formLayout_3.setRows(["25px", "25px", "25px", "1fr"]);
				group_3.setLayout(formLayout_3);
				(function(container){
					var output_1 = new cpr.controls.Output();
					output_1.value = "column1 (required)";
					container.addChild(output_1, {
						"colIndex": 0,
						"rowIndex": 0
					});
					var output_2 = new cpr.controls.Output();
					output_2.value = "column3 (minLength=10)";
					container.addChild(output_2, {
						"colIndex": 0,
						"rowIndex": 1
					});
					var output_3 = new cpr.controls.Output();
					output_3.value = "column5 (lpad=#)";
					container.addChild(output_3, {
						"colIndex": 0,
						"rowIndex": 2
					});
					var output_4 = new cpr.controls.Output();
					output_4.value = "column2 (email)";
					container.addChild(output_4, {
						"colIndex": 2,
						"rowIndex": 0
					});
					var output_5 = new cpr.controls.Output();
					output_5.value = "column4 (fixLength=10)";
					container.addChild(output_5, {
						"colIndex": 2,
						"rowIndex": 1
					});
					var inputBox_1 = new cpr.controls.InputBox("ipb1");
					inputBox_1.userAttr({
						"required": "Y",
						"name": "column1"
					});
					inputBox_1.style.setClasses(["required"]);
					inputBox_1.bind("value").toDataMap(app.lookup("dm1"), "column1");
					container.addChild(inputBox_1, {
						"colIndex": 1,
						"rowIndex": 0
					});
					var inputBox_2 = new cpr.controls.InputBox("ipb2");
					inputBox_2.userAttr({
						"minlength": "10",
						"name": "column3"
					});
					inputBox_2.bind("value").toDataMap(app.lookup("dm1"), "column3");
					container.addChild(inputBox_2, {
						"colIndex": 1,
						"rowIndex": 1
					});
					var inputBox_3 = new cpr.controls.InputBox("ipb3");
					inputBox_3.userAttr({
						"name": "column5",
						"fixlength": "10",
						"minlength": "5",
						"lpad": "#"
					});
					inputBox_3.bind("value").toDataMap(app.lookup("dm1"), "column5");
					if(typeof onIpb3ValueChange == "function") {
						inputBox_3.addEventListener("value-change", onIpb3ValueChange);
					}
					container.addChild(inputBox_3, {
						"colIndex": 1,
						"rowIndex": 2
					});
					var inputBox_4 = new cpr.controls.InputBox("ipb4");
					inputBox_4.userAttr({
						"type": "email",
						"name": "column2"
					});
					inputBox_4.bind("value").toDataMap(app.lookup("dm1"), "column2");
					container.addChild(inputBox_4, {
						"colIndex": 3,
						"rowIndex": 0
					});
					var inputBox_5 = new cpr.controls.InputBox("ipb5");
					inputBox_5.userAttr({
						"fixlength": "10",
						"name": "column4"
					});
					inputBox_5.bind("value").toDataMap(app.lookup("dm1"), "column4");
					container.addChild(inputBox_5, {
						"colIndex": 3,
						"rowIndex": 1
					});
				})(group_3);
				container.addChild(group_3, {
					"colIndex": 0,
					"rowIndex": 1
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "44px",
				"right": "10px",
				"bottom": "10px",
				"left": "10px"
			});
			
			var userDefinedControl_1 = new udc.pagetitle();
			userDefinedControl_1.bind("title").toAppProperty("title");
			container.addChild(userDefinedControl_1, {
				"top": "10px",
				"right": "10px",
				"left": "10px",
				"height": "24px"
			});
		}
	});
	app.title = "freeformvalidation";
	cpr.core.Platform.INSTANCE.register(app);
})();
