/*
 * App URI: template/layout/animation
 * Source Location: template/layout/animation.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("template/layout/animation", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * animation.js
			 * Created at 2018. 8. 14. 오전 10:46:32.
			 * 
			 * @author leeds
			 ************************************************/
			
			
			
			/*
			 * "나타나기" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn1Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn1 = app.lookup("btn1");
				btn1.visible = true
				btn1.style.animateFrom({
					"transform": "rotateX(-90deg)"
				}, 0.3, cpr.animation.TimingFunction.EASE_OUT_BACK);
			}
			
			
			/*
			 * "강조" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn2Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn2 = app.lookup("btn2");
				btn2.style.animateAndReverse({
					"transform": "translateZ(500px) rotateZ(45deg)",
					"color": "red"
				});
			}
			
			
			/*
			 * "사라지기" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn3Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn3 = app.lookup("btn3");
				btn3.style.animateTo({
					"transform": "translateZ(-500px)",
					"opacity": "0"
				});
			}
			
			function animateButton( /* cpr.events.CMouseEvent */ e) {
				/** @type cpr.controls.Button */
				var control = e.control;
				var timingFunction = cpr.animation.TimingFunction[control.value];
			
				animate(control, timingFunction);
			}
			
			/**
			 * 
			 * @param {cpr.controls.UIControl} control
			 * @param {String} timingFunction
			 */
			function animate(control, timingFunction) {
				var oldTransform = control.style.css("transform");
				if (!oldTransform || oldTransform == "none") {
					control.style.animateTo({
						transform: "translateX(300px)"
					}, 1, timingFunction);
				} else {
					control.style.animateTo({
						transform: "none"
					}, 1, timingFunction);
				}
			};
			// End - User Script
			
			// Header
			app.declareAppProperty("title", null);
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container();
			// Layout
			var formLayout_1 = new cpr.controls.layouts.FormLayout();
			formLayout_1.topMargin = "5";
			formLayout_1.rightMargin = "5";
			formLayout_1.bottomMargin = "5";
			formLayout_1.leftMargin = "5";
			formLayout_1.horizontalSpacing = "10";
			formLayout_1.verticalSpacing = "10";
			formLayout_1.setColumns(["1fr", "1fr", "1fr"]);
			formLayout_1.setRows(["1fr", "30px"]);
			group_1.setLayout(formLayout_1);
			(function(container){
				var button_1 = new cpr.controls.Button();
				button_1.value = "나타나기";
				if(typeof onBtn1Click == "function") {
					button_1.addEventListener("click", onBtn1Click);
				}
				container.addChild(button_1, {
					"colIndex": 0,
					"rowIndex": 1
				});
				var button_2 = new cpr.controls.Button();
				button_2.value = "강조";
				if(typeof onBtn2Click == "function") {
					button_2.addEventListener("click", onBtn2Click);
				}
				container.addChild(button_2, {
					"colIndex": 1,
					"rowIndex": 1
				});
				var button_3 = new cpr.controls.Button();
				button_3.value = "사라지기";
				if(typeof onBtn3Click == "function") {
					button_3.addEventListener("click", onBtn3Click);
				}
				container.addChild(button_3, {
					"colIndex": 2,
					"rowIndex": 1
				});
				var button_4 = new cpr.controls.Button("btn1");
				button_4.visible = false;
				button_4.value = "Button";
				container.addChild(button_4, {
					"colIndex": 0,
					"rowIndex": 0
				});
				var button_5 = new cpr.controls.Button("btn2");
				button_5.value = "Button";
				container.addChild(button_5, {
					"colIndex": 1,
					"rowIndex": 0
				});
				var button_6 = new cpr.controls.Button("btn3");
				button_6.value = "Button";
				container.addChild(button_6, {
					"colIndex": 2,
					"rowIndex": 0
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "55px",
				"right": "384px",
				"left": "40px",
				"height": "300px"
			});
			
			var userDefinedControl_1 = new udc.pagetitle();
			userDefinedControl_1.bind("title").toAppProperty("title");
			container.addChild(userDefinedControl_1, {
				"top": "10px",
				"right": "10px",
				"left": "10px",
				"height": "24px"
			});
			
			var group_2 = new cpr.controls.Container("grp");
			group_2.style.css({
				"border-right-style" : "solid",
				"border-top-width" : "1px",
				"border-bottom-color" : "gray",
				"border-right-width" : "1px",
				"border-left-color" : "gray",
				"border-right-color" : "gray",
				"border-left-width" : "1px",
				"border-top-style" : "solid",
				"background-color" : "#eeeeee",
				"border-left-style" : "solid",
				"border-bottom-width" : "1px",
				"border-top-color" : "gray",
				"border-bottom-style" : "solid",
				"background-image" : "none"
			});
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_2);
			(function(container){
				var button_7 = new cpr.controls.Button("btn7");
				button_7.value = "EASE_IN_BACK";
				if(typeof animateButton == "function") {
					button_7.addEventListener("click", animateButton);
				}
				container.addChild(button_7, {
					"top": "230px",
					"left": "35px",
					"width": "180px",
					"height": "30px"
				});
				var button_8 = new cpr.controls.Button("btn8");
				button_8.value = "EASE_IN_CUBIC";
				if(typeof animateButton == "function") {
					button_8.addEventListener("click", animateButton);
				}
				container.addChild(button_8, {
					"top": "140px",
					"left": "35px",
					"width": "180px",
					"height": "30px"
				});
				var button_9 = new cpr.controls.Button("btn9");
				button_9.value = "EASE_OUT_BACK";
				if(typeof animateButton == "function") {
					button_9.addEventListener("click", animateButton);
				}
				container.addChild(button_9, {
					"top": "260px",
					"left": "35px",
					"width": "180px",
					"height": "30px"
				});
				var button_10 = new cpr.controls.Button("btn10");
				button_10.value = "EASE_OUT_CUBIC";
				if(typeof animateButton == "function") {
					button_10.addEventListener("click", animateButton);
				}
				container.addChild(button_10, {
					"top": "170px",
					"left": "35px",
					"width": "180px",
					"height": "30px"
				});
				var button_11 = new cpr.controls.Button("btn11");
				button_11.value = "LINEAR";
				if(typeof animateButton == "function") {
					button_11.addEventListener("click", animateButton);
				}
				container.addChild(button_11, {
					"top": "20px",
					"left": "35px",
					"width": "180px",
					"height": "30px"
				});
				var button_12 = new cpr.controls.Button("btn12");
				button_12.value = "EASE_IN";
				if(typeof animateButton == "function") {
					button_12.addEventListener("click", animateButton);
				}
				container.addChild(button_12, {
					"top": "50px",
					"left": "35px",
					"width": "180px",
					"height": "30px"
				});
				var button_13 = new cpr.controls.Button("btn13");
				button_13.value = "EASE_IN_OUT";
				if(typeof animateButton == "function") {
					button_13.addEventListener("click", animateButton);
				}
				container.addChild(button_13, {
					"top": "110px",
					"left": "35px",
					"width": "180px",
					"height": "30px"
				});
				var button_14 = new cpr.controls.Button("btn14");
				button_14.value = "EASE_IN_OUT_CUBIC";
				if(typeof animateButton == "function") {
					button_14.addEventListener("click", animateButton);
				}
				container.addChild(button_14, {
					"top": "200px",
					"left": "35px",
					"width": "180px",
					"height": "30px"
				});
				var button_15 = new cpr.controls.Button("btn15");
				button_15.value = "EASE_OUT";
				if(typeof animateButton == "function") {
					button_15.addEventListener("click", animateButton);
				}
				container.addChild(button_15, {
					"top": "80px",
					"left": "35px",
					"width": "180px",
					"height": "30px"
				});
				var button_16 = new cpr.controls.Button("btn16");
				button_16.value = "EASE_IN_OUT_BACK";
				if(typeof animateButton == "function") {
					button_16.addEventListener("click", animateButton);
				}
				container.addChild(button_16, {
					"top": "290px",
					"left": "35px",
					"width": "180px",
					"height": "30px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "375px",
				"left": "40px",
				"width": "600px",
				"height": "350px"
			});
		}
	});
	app.title = "animation";
	cpr.core.Platform.INSTANCE.register(app);
})();
