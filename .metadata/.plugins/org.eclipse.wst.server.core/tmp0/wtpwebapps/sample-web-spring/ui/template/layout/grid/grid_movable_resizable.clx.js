/*
 * App URI: template/layout/grid/grid_movable_resizable
 * Source Location: template/layout/grid/grid_movable_resizable.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("template/layout/grid/grid_movable_resizable", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * grid_movable_resizable.js
			 * Created at 2018. 8. 14. 오전 9:23:03.
			 * 
			 * @author leeds
			 ************************************************/
			
			
			
			/*
			 * Body에서 init 이벤트 발생 시 호출.
			 * 앱이 최초 구성될 때 발생하는 이벤트 입니다.
			 */
			function onBodyInit(/* cpr.events.CEvent */ e){
				
				app.lookup("sms_list").send();
			};
			// End - User Script
			
			// Header
			app.declareBindableAppProperty("title", null);
			var dataSet_1 = new cpr.data.DataSet("ds_list");
			dataSet_1.parseData({
				"columns" : [
					{"name": "col1"},
					{"name": "col2"},
					{"name": "col3"},
					{"name": "col4"},
					{"name": "col5"},
					{"name": "col6"},
					{"name": "col7"},
					{"name": "col8"},
					{"name": "col9"},
					{"name": "col10"}
				]
			});
			app.register(dataSet_1);
			var submission_1 = new cpr.protocols.Submission("sms_list");
			submission_1.action = "../template/movableresizable/getList.do";
			submission_1.addResponseData(dataSet_1, false);
			app.register(submission_1);
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.pagetitle();
			userDefinedControl_1.bind("title").toAppProperty("title");
			container.addChild(userDefinedControl_1, {
				"top": "10px",
				"right": "10px",
				"left": "10px",
				"height": "24px"
			});
			
			var grid_1 = new cpr.controls.Grid("grd1");
			grid_1.readOnly = false;
			grid_1.init({
				"dataSet": app.lookup("ds_list"),
				"columnMovable": true,
				"columnResizable": true,
				"columns": [
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"}
				],
				"header": {
					"rows": [
						{"height": "30px"},
						{"height": "30px"}
					],
					"cells": [
						{
							"constraint": {"rowIndex": 1, "colIndex": 0},
							"configurator": function(cell){
								cell.targetColumnName = "col1";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "col1";
							}
						},
						{
							"constraint": {"rowIndex": 1, "colIndex": 1},
							"configurator": function(cell){
								cell.targetColumnName = "col2";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "col2";
							}
						},
						{
							"constraint": {"rowIndex": 1, "colIndex": 2},
							"configurator": function(cell){
								cell.targetColumnName = "col3";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "col3";
							}
						},
						{
							"constraint": {"rowIndex": 1, "colIndex": 3},
							"configurator": function(cell){
								cell.targetColumnName = "col4";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "col4";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 4, "rowSpan": 2, "colSpan": 1},
							"configurator": function(cell){
								cell.targetColumnName = "col5";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "col5";
							}
						},
						{
							"constraint": {"rowIndex": 1, "colIndex": 5},
							"configurator": function(cell){
								cell.targetColumnName = "col6";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "col6";
							}
						},
						{
							"constraint": {"rowIndex": 1, "colIndex": 6},
							"configurator": function(cell){
								cell.targetColumnName = "col7";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "col7";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 0, "rowSpan": 1, "colSpan": 4},
							"configurator": function(cell){
								cell.text = "Merge1";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 5, "rowSpan": 1, "colSpan": 2},
							"configurator": function(cell){
								cell.text = "Merge2";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 7, "rowSpan": 2, "colSpan": 1},
							"configurator": function(cell){
								cell.text = "col8";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 8, "rowSpan": 2, "colSpan": 1},
							"configurator": function(cell){
								cell.text = "col9";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 9, "rowSpan": 2, "colSpan": 1},
							"configurator": function(cell){
								cell.text = "col10";
							}
						}
					]
				},
				"detail": {
					"rows": [{"height": "30px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.columnName = "col1";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.columnName = "col2";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
								cell.columnName = "col3";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 3},
							"configurator": function(cell){
								cell.columnName = "col4";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 4},
							"configurator": function(cell){
								cell.columnName = "col5";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 5},
							"configurator": function(cell){
								cell.columnName = "col6";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 6},
							"configurator": function(cell){
								cell.columnName = "col7";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 7},
							"configurator": function(cell){
								cell.columnName = "col8";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 8},
							"configurator": function(cell){
								cell.columnName = "col9";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 9},
							"configurator": function(cell){
								cell.columnName = "col10";
							}
						}
					]
				},
				"footer": {
					"rows": [{"height": "30px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0, "rowSpan": 1, "colSpan": 1},
							"configurator": function(cell){
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 6},
							"configurator": function(cell){
								cell.expr = "getSum(\"col7\")";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.expr = "";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
								cell.expr = "";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 3},
							"configurator": function(cell){
								cell.expr = "";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 4},
							"configurator": function(cell){
								cell.expr = "";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 5},
							"configurator": function(cell){
								cell.expr = "";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 7},
							"configurator": function(cell){
								cell.expr = "getSum(\"col8\")";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 8},
							"configurator": function(cell){
								cell.expr = "getSum(\"col9\")";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 9},
							"configurator": function(cell){
								cell.expr = "getSum(\"col10\")";
							}
						}
					]
				}
			});
			container.addChild(grid_1, {
				"top": "44px",
				"right": "10px",
				"bottom": "10px",
				"left": "10px"
			});
			if(typeof onBodyInit == "function"){
				app.addEventListener("init", onBodyInit);
			}
		}
	});
	app.title = "grid_movable_resizable";
	cpr.core.Platform.INSTANCE.register(app);
})();
