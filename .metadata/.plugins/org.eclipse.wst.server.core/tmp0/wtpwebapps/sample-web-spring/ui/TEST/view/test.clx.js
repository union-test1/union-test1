/*
 * App URI: TEST/view/test
 * Source Location: TEST/view/test.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("TEST/view/test", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * emp.js
			 * Created at 2020. 10. 29. 오전 10:40:46.
			 *
			 * @author A
			 ************************************************/
			
			/*
			 * "조회" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var button = e.control;
				app.lookup("sms1").send();
				
			}
			
			/*
			 * 서브미션에서 submit-success 이벤트 발생 시 호출.
			 * 통신이 성공하면 발생합니다.
			 */
			function onSms1SubmitSuccess( /* cpr.events.CSubmissionEvent */ e) {
				/** 
				 * @type cpr.protocols.Submission
				 */
				var sms1 = e.control;
				
				app.lookup("grd1").redraw();
			}
			
			/*
			 * "초기화" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick2( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var button = e.control;
				app.lookup("ds1").clear();
				app.lookup("grd1").redraw();
			}
			
			
			/*
			 * "생성" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick3(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var button = e.control;
				 window.open("/testNew.do", "생성", "width=1025, height=200, toolbar=no, menubar=no, scrollbars=no, resizable=yes" );
			}
			
			
			
			/*
			 * "삭제" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick4(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var button = e.control;
				
				var grd1 = app.lookup("grd1");
				// 선택된 row index 배열을 반환합니다.
				var rowIdices = grd1.getSelectedRowIndices();
				
				if (rowIdices.length == 0) {
					alert("체크박스를 선택해 주세요.");
					return;
				}
				
				// 선택된 row 를 삭제합니다.
				grd1.deleteRow(rowIdices);
				
				// 선택을 모두 제거합니다.
				grd1.clearSelection();
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("ds1");
			dataSet_1.parseData({
				"columns" : [
					{"name": "사원번호"},
					{"name": "이름"},
					{"name": "직급"},
					{"name": "전화번호"},
					{"name": "나이"}
				]
			});
			app.register(dataSet_1);
			var dataMap_1 = new cpr.data.DataMap("dm1");
			dataMap_1.parseData({});
			app.register(dataMap_1);
			var submission_1 = new cpr.protocols.Submission("sms1");
			submission_1.action = "testShow.do";
			submission_1.addResponseData(dataSet_1, false);
			if(typeof onSms1SubmitSuccess == "function") {
				submission_1.addEventListener("submit-success", onSms1SubmitSuccess);
			}
			app.register(submission_1);
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container();
			// Layout
			var formLayout_1 = new cpr.controls.layouts.FormLayout();
			formLayout_1.topMargin = "0px";
			formLayout_1.rightMargin = "0px";
			formLayout_1.bottomMargin = "0px";
			formLayout_1.leftMargin = "0px";
			formLayout_1.horizontalSpacing = "5px";
			formLayout_1.verticalSpacing = "5px";
			formLayout_1.setColumns(["1fr", "1fr", "1fr", "1fr", "1fr", "1fr", "1fr", "1fr", "1fr"]);
			formLayout_1.setRows(["25px", "25px", "25px", "25px", "1fr", "25px"]);
			group_1.setLayout(formLayout_1);
			(function(container){
				var output_1 = new cpr.controls.Output();
				output_1.value = "이름";
				output_1.style.css({
					"text-align" : "right"
				});
				container.addChild(output_1, {
					"colIndex": 5,
					"rowIndex": 0
				});
				var inputBox_1 = new cpr.controls.InputBox("ipb2");
				container.addChild(inputBox_1, {
					"colIndex": 6,
					"rowIndex": 0,
					"colSpan": 2,
					"rowSpan": 1
				});
				var button_1 = new cpr.controls.Button();
				button_1.value = "조회";
				if(typeof onButtonClick == "function") {
					button_1.addEventListener("click", onButtonClick);
				}
				container.addChild(button_1, {
					"colIndex": 8,
					"rowIndex": 0
				});
				var button_2 = new cpr.controls.Button();
				button_2.value = "삭제";
				if(typeof onButtonClick4 == "function") {
					button_2.addEventListener("click", onButtonClick4);
				}
				container.addChild(button_2, {
					"colIndex": 8,
					"rowIndex": 5
				});
				var button_3 = new cpr.controls.Button();
				button_3.value = "생성";
				if(typeof onButtonClick3 == "function") {
					button_3.addEventListener("click", onButtonClick3);
				}
				container.addChild(button_3, {
					"colIndex": 6,
					"rowIndex": 5
				});
				var button_4 = new cpr.controls.Button();
				button_4.value = "수정";
				container.addChild(button_4, {
					"colIndex": 7,
					"rowIndex": 5
				});
				var grid_1 = new cpr.controls.Grid("grd1");
				grid_1.init({
					"dataSet": app.lookup("ds1"),
					"columns": [
						{"width": "25px"},
						{"width": "100px"},
						{"width": "100px"},
						{"width": "100px"},
						{"width": "100px"},
						{"width": "100px"}
					],
					"header": {
						"rows": [{"height": "24px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.filterable = false;
									cell.sortable = false;
									cell.columnType = "checkbox";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.targetColumnName = "사원번호";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "사원번호";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.targetColumnName = "이름";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "이름";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.targetColumnName = "직급";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "직급";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.targetColumnName = "전화번호";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "전화번호";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.targetColumnName = "나이";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "나이";
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "24px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnName = "사원번호";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "이름";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "직급";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "전화번호";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "나이";
								}
							}
						]
					}
				});
				container.addChild(grid_1, {
					"colIndex": 0,
					"rowIndex": 4,
					"colSpan": 9,
					"rowSpan": 1
				});
				var button_5 = new cpr.controls.Button();
				button_5.value = "초기화";
				if(typeof onButtonClick2 == "function") {
					button_5.addEventListener("click", onButtonClick2);
				}
				container.addChild(button_5, {
					"colIndex": 0,
					"rowIndex": 5
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "30px",
				"left": "30px",
				"width": "707px",
				"height": "496px"
			});
		}
	});
	app.title = "test";
	cpr.core.Platform.INSTANCE.register(app);
})();
