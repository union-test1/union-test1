/*
 * App URI: example/component/fileupload_bind
 * Source Location: example/component/fileupload_bind.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("example/component/fileupload_bind", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * fileupload.js
			 * Created at 2018. 8. 13. 오후 5:38:01.
			 * 
			 * @author leeds
			 ************************************************/
			
			
			
			/*
			 * 콤보 박스에서 selection-change 이벤트 발생 시 호출.
			 * ComboBox Item을 선택하여 선택된 값이 저장된 후에 발생하는 이벤트.
			 */
			function onCmb1SelectionChange(/* cpr.events.CSelectionEvent */ e){
				/** 
				 * @type cpr.controls.ComboBox
				 */
				var cmb1 = e.control;
				
				if(cmb1.value == "en"){
					cpr.I18N.INSTANCE.currentLanguage = "en";
				}else if(cmb1.value == "ja"){
					cpr.I18N.INSTANCE.currentLanguage = "ja";
				}else{
					cpr.I18N.INSTANCE.currentLanguage = "ko";
				}
			};
			// End - User Script
			
			// Header
			app.declareBindableAppProperty("title", "");
			app.declareBindableAppProperty("explain", null);
			var dataSet_1 = new cpr.data.DataSet("ds1");
			dataSet_1.parseData({
				"columns": [
					{"name": "label"},
					{"name": "value"}
				],
				"rows": [
					{"label": "ko", "value": "ko"},
					{"label": "en", "value": "en"},
					{"label": "ja", "value": "ja"}
				]
			});
			app.register(dataSet_1);
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.pagetitle2();
			userDefinedControl_1.bind("explain").toAppProperty("explain");
			userDefinedControl_1.bind("title").toAppProperty("title");
			container.addChild(userDefinedControl_1, {
				"top": "10px",
				"right": "10px",
				"left": "10px",
				"height": "50px"
			});
			
			var fileUpload_1 = new cpr.controls.FileUpload("fud1");
			container.addChild(fileUpload_1, {
				"top": "120px",
				"left": "40px",
				"width": "500px",
				"height": "200px"
			});
			
			var comboBox_1 = new cpr.controls.ComboBox("cmb1");
			comboBox_1.value = "ko";
			(function(comboBox_1){
				comboBox_1.setItemSet(app.lookup("ds1"), {
					"label": "label",
					"value": "value"
				})
			})(comboBox_1);
			if(typeof onCmb1SelectionChange == "function") {
				comboBox_1.addEventListener("selection-change", onCmb1SelectionChange);
			}
			container.addChild(comboBox_1, {
				"top": "80px",
				"left": "40px",
				"width": "120px",
				"height": "30px"
			});
			
			var fileUpload_2 = new cpr.controls.FileUpload("fud2");
			fileUpload_2.hideSendButton = true;
			fileUpload_2.addLabel = "추가 ~";
			fileUpload_2.removeLabel = "삭제 ~";
			container.addChild(fileUpload_2, {
				"top": "380px",
				"left": "40px",
				"width": "500px",
				"height": "200px"
			});
			
			var output_1 = new cpr.controls.Output();
			output_1.value = "보내기 버튼 숨기기 / 추가,삭제 라벨 변경";
			container.addChild(output_1, {
				"top": "340px",
				"left": "40px",
				"width": "500px",
				"height": "30px"
			});
		}
	});
	app.title = "fileupload_bind";
	cpr.core.Platform.INSTANCE.register(app);
})();
