/*
 * App URI: example/component/dateinput
 * Source Location: example/component/dateinput.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("example/component/dateinput", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			
			/*
			 * Body에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(/* cpr.events.CEvent */ e){
				var dateinput2 = app.lookup("dti2");
				// 언어 값을 설정
				dateinput2.locale = "en";
				
				var dateinput3 = app.lookup("dti3");
				// locale의 date를 추가 또는 수정합니다.
				// date는 locale에 따른 년, 월, 일 등의 날짜를 표현하는 json data입니다.
				dateinput3.updateLocale("ja", {display:{ Y: "年", M: "月", D: "日", H: "時", h: "時", m: "分", s: "秒", a: "午前/午後" },meridiem:["午前", "午後"]})
				dateinput3.locale = "ja";
			}
			
			/*
			 * 데이트 인풋에서 value-change 이벤트 발생 시 호출.
			 * Dateinput의 value를 변경하여 변경된 값이 저장된 후에 발생하는 이벤트.
			 */
			function onDti2ValueChange(/* cpr.events.CValueChangeEvent */ e){
				/** 
				 * @type cpr.controls.DateInput
				 */
				var dti2 = e.control;
				app.lookup("opt2").redraw();
			}
			
			/*
			 * 데이트 인풋에서 value-change 이벤트 발생 시 호출.
			 * Dateinput의 value를 변경하여 변경된 값이 저장된 후에 발생하는 이벤트.
			 */
			function onDti1ValueChange(/* cpr.events.CValueChangeEvent */ e){
				/** 
				 * @type cpr.controls.DateInput
				 */
				var dti1 = e.control;
				app.lookup("opt1").redraw();
			}
			
			/*
			 * 데이트 인풋에서 value-change 이벤트 발생 시 호출.
			 * Dateinput의 value를 변경하여 변경된 값이 저장된 후에 발생하는 이벤트.
			 */
			function onDti3ValueChange(/* cpr.events.CValueChangeEvent */ e){
				/** 
				 * @type cpr.controls.DateInput
				 */
				var dti3 = e.control;
				app.lookup("opt3").redraw();
			}
			
			/*
			 * 콤보 박스에서 selection-change 이벤트 발생 시 호출.
			 * ComboBox Item을 선택하여 선택된 값이 저장된 후에 발생하는 이벤트.
			 */
			function onCmb2SelectionChange(/* cpr.events.CSelectionEvent */ e){
				/** 
				 * @type cpr.controls.ComboBox
				 */
				var cmb2 = e.control;
				app.lookup("dti1").format = e.newSelection[e.newSelection.length-1].value;
			}
			
			/*
			 * 콤보 박스에서 selection-change 이벤트 발생 시 호출.
			 * ComboBox Item을 선택하여 선택된 값이 저장된 후에 발생하는 이벤트.
			 */
			function onCmb1SelectionChange(/* cpr.events.CSelectionEvent */ e){
				/** 
				 * @type cpr.controls.ComboBox
				 */
				var cmb1 = e.control;
				app.lookup("dti2").format = e.newSelection[e.newSelection.length-1].value;
			}
			
			/*
			 * 콤보 박스에서 selection-change 이벤트 발생 시 호출.
			 * ComboBox Item을 선택하여 선택된 값이 저장된 후에 발생하는 이벤트.
			 */
			function onCmb3SelectionChange(/* cpr.events.CSelectionEvent */ e){
				/** 
				 * @type cpr.controls.ComboBox
				 */
				var cmb3 = e.control;
				app.lookup("dti3").format = e.newSelection[e.newSelection.length-1].value;
			}
			
			/*
			 * 콤보 박스에서 selection-change 이벤트 발생 시 호출.
			 * ComboBox Item을 선택하여 선택된 값이 저장된 후에 발생하는 이벤트.
			 */
			function onCmb4SelectionChange(/* cpr.events.CSelectionEvent */ e){
				/** 
				 * @type cpr.controls.ComboBox
				 */
				var cmb4 = e.control;
				app.lookup("dti1").mask = e.newSelection[e.newSelection.length-1].value;
			}
			
			/*
			 * 콤보 박스에서 selection-change 이벤트 발생 시 호출.
			 * ComboBox Item을 선택하여 선택된 값이 저장된 후에 발생하는 이벤트.
			 */
			function onCmb5SelectionChange(/* cpr.events.CSelectionEvent */ e){
				/** 
				 * @type cpr.controls.ComboBox
				 */
				var cmb5 = e.control;
				app.lookup("dti2").mask = e.newSelection[e.newSelection.length-1].value;
			}
			
			/*
			 * 콤보 박스에서 selection-change 이벤트 발생 시 호출.
			 * ComboBox Item을 선택하여 선택된 값이 저장된 후에 발생하는 이벤트.
			 */
			function onCmb6SelectionChange(/* cpr.events.CSelectionEvent */ e){
				/** 
				 * @type cpr.controls.ComboBox
				 */
				var cmb6 = e.control;
				app.lookup("dti3").mask = e.newSelection[e.newSelection.length-1].value;
			};
			// End - User Script
			
			// Header
			app.declareBindableAppProperty("title", null);
			app.declareBindableAppProperty("explain", null);
			var dataSet_1 = new cpr.data.DataSet("mask");
			dataSet_1.parseData({
				"columns": [
					{"name": "label"},
					{"name": "value"}
				],
				"rows": [
					{"label": "YYYY-MM-DD", "value": "YYYY-MM-DD"},
					{"label": "DD-MM-YYYY", "value": "DD-MM-YYYY"},
					{"label": "MM-DD-YYYY", "value": "MM-DD-YYYY"},
					{"label": "YYYY/M/D", "value": "YYYY/M/D"},
					{"label": "D/M/YYYY", "value": "D/M/YYYY"},
					{"label": "M/D/YYYY", "value": "M/D/YYYY"}
				]
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("format");
			dataSet_2.parseData({
				"columns": [
					{"name": "label"},
					{"name": "value"}
				],
				"rows": [
					{"label": "YYYYMMDD", "value": "YYYYMMDD"},
					{"label": "DDMMYYYY", "value": "DDMMYYYY"},
					{"label": "MMDDYYYY", "value": "MMDDYYYY"},
					{"label": "YYYY-M-D", "value": "YYYY-M-D"},
					{"label": "D-M-YYYY", "value": "D-M-YYYY"},
					{"label": "M-D-YYYY", "value": "M-D-YYYY"}
				]
			});
			app.register(dataSet_2);
			var dataMap_1 = new cpr.data.DataMap("dm1");
			dataMap_1.parseData({
				"columns" : [
					{"name": "dti1"},
					{"name": "dti2"},
					{"name": "dti3"}
				]
			});
			app.register(dataMap_1);
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var dateInput_1 = new cpr.controls.DateInput("dti1");
			dateInput_1.bind("value").toDataMap(app.lookup("dm1"), "dti1");
			if(typeof onDti1ValueChange == "function") {
				dateInput_1.addEventListener("value-change", onDti1ValueChange);
			}
			container.addChild(dateInput_1, {
				"top": "216px",
				"left": "166px",
				"width": "150px",
				"height": "20px"
			});
			
			var output_1 = new cpr.controls.Output();
			output_1.value = "언어";
			container.addChild(output_1, {
				"top": "70px",
				"left": "20px",
				"width": "100px",
				"height": "20px"
			});
			
			var output_2 = new cpr.controls.Output();
			output_2.value = "한국어";
			container.addChild(output_2, {
				"top": "70px",
				"left": "166px",
				"width": "100px",
				"height": "20px"
			});
			
			var output_3 = new cpr.controls.Output();
			output_3.value = "영어";
			container.addChild(output_3, {
				"top": "70px",
				"left": "354px",
				"width": "100px",
				"height": "20px"
			});
			
			var output_4 = new cpr.controls.Output();
			output_4.value = "일본어";
			container.addChild(output_4, {
				"top": "70px",
				"left": "558px",
				"width": "100px",
				"height": "20px"
			});
			
			var dateInput_2 = new cpr.controls.DateInput("dti2");
			dateInput_2.bind("value").toDataMap(app.lookup("dm1"), "dti2");
			if(typeof onDti2ValueChange == "function") {
				dateInput_2.addEventListener("value-change", onDti2ValueChange);
			}
			container.addChild(dateInput_2, {
				"top": "216px",
				"left": "362px",
				"width": "150px",
				"height": "20px"
			});
			
			var dateInput_3 = new cpr.controls.DateInput("dti3");
			dateInput_3.bind("value").toDataMap(app.lookup("dm1"), "dti3");
			if(typeof onDti3ValueChange == "function") {
				dateInput_3.addEventListener("value-change", onDti3ValueChange);
			}
			container.addChild(dateInput_3, {
				"top": "216px",
				"left": "558px",
				"width": "150px",
				"height": "20px"
			});
			
			var output_5 = new cpr.controls.Output();
			output_5.value = "마스크 포맷";
			container.addChild(output_5, {
				"top": "100px",
				"left": "20px",
				"width": "100px",
				"height": "20px"
			});
			
			var output_6 = new cpr.controls.Output();
			output_6.value = "값 포맷";
			container.addChild(output_6, {
				"top": "132px",
				"left": "20px",
				"width": "100px",
				"height": "20px"
			});
			
			var output_7 = new cpr.controls.Output();
			output_7.value = "값";
			container.addChild(output_7, {
				"top": "162px",
				"left": "20px",
				"width": "100px",
				"height": "20px"
			});
			
			var output_8 = new cpr.controls.Output("opt1");
			output_8.value = "Output";
			output_8.bind("value").toDataMap(app.lookup("dm1"), "dti1");
			container.addChild(output_8, {
				"top": "162px",
				"left": "166px",
				"width": "150px",
				"height": "20px"
			});
			
			var output_9 = new cpr.controls.Output("opt2");
			output_9.value = "Output";
			output_9.bind("value").toDataMap(app.lookup("dm1"), "dti2");
			container.addChild(output_9, {
				"top": "162px",
				"left": "362px",
				"width": "150px",
				"height": "20px"
			});
			
			var output_10 = new cpr.controls.Output("opt3");
			output_10.value = "Output";
			output_10.bind("value").toDataMap(app.lookup("dm1"), "dti3");
			container.addChild(output_10, {
				"top": "162px",
				"left": "558px",
				"width": "150px",
				"height": "20px"
			});
			
			var comboBox_1 = new cpr.controls.ComboBox("cmb1");
			(function(comboBox_1){
				comboBox_1.setItemSet(app.lookup("format"), {
					"label": "label",
					"value": "value"
				})
			})(comboBox_1);
			if(typeof onCmb1SelectionChange == "function") {
				comboBox_1.addEventListener("selection-change", onCmb1SelectionChange);
			}
			container.addChild(comboBox_1, {
				"top": "132px",
				"left": "362px",
				"width": "150px",
				"height": "20px"
			});
			
			var comboBox_2 = new cpr.controls.ComboBox("cmb2");
			(function(comboBox_2){
				comboBox_2.setItemSet(app.lookup("format"), {
					"label": "label",
					"value": "value"
				})
			})(comboBox_2);
			if(typeof onCmb2SelectionChange == "function") {
				comboBox_2.addEventListener("selection-change", onCmb2SelectionChange);
			}
			container.addChild(comboBox_2, {
				"top": "132px",
				"left": "166px",
				"width": "150px",
				"height": "20px"
			});
			
			var comboBox_3 = new cpr.controls.ComboBox("cmb3");
			(function(comboBox_3){
				comboBox_3.setItemSet(app.lookup("format"), {
					"label": "label",
					"value": "value"
				})
			})(comboBox_3);
			if(typeof onCmb3SelectionChange == "function") {
				comboBox_3.addEventListener("selection-change", onCmb3SelectionChange);
			}
			container.addChild(comboBox_3, {
				"top": "132px",
				"left": "558px",
				"width": "150px",
				"height": "20px"
			});
			
			var comboBox_4 = new cpr.controls.ComboBox("cmb4");
			(function(comboBox_4){
				comboBox_4.setItemSet(app.lookup("mask"), {
					"label": "label",
					"value": "value"
				})
			})(comboBox_4);
			if(typeof onCmb4SelectionChange == "function") {
				comboBox_4.addEventListener("selection-change", onCmb4SelectionChange);
			}
			container.addChild(comboBox_4, {
				"top": "100px",
				"left": "166px",
				"width": "150px",
				"height": "20px"
			});
			
			var comboBox_5 = new cpr.controls.ComboBox("cmb5");
			(function(comboBox_5){
				comboBox_5.setItemSet(app.lookup("mask"), {
					"label": "label",
					"value": "value"
				})
			})(comboBox_5);
			if(typeof onCmb5SelectionChange == "function") {
				comboBox_5.addEventListener("selection-change", onCmb5SelectionChange);
			}
			container.addChild(comboBox_5, {
				"top": "100px",
				"left": "362px",
				"width": "150px",
				"height": "20px"
			});
			
			var comboBox_6 = new cpr.controls.ComboBox("cmb6");
			(function(comboBox_6){
				comboBox_6.setItemSet(app.lookup("mask"), {
					"label": "label",
					"value": "value"
				})
			})(comboBox_6);
			if(typeof onCmb6SelectionChange == "function") {
				comboBox_6.addEventListener("selection-change", onCmb6SelectionChange);
			}
			container.addChild(comboBox_6, {
				"top": "100px",
				"left": "558px",
				"width": "150px",
				"height": "20px"
			});
			
			var userDefinedControl_1 = new udc.pagetitle2();
			userDefinedControl_1.bind("title").toAppProperty("title");
			userDefinedControl_1.bind("explain").toAppProperty("explain");
			container.addChild(userDefinedControl_1, {
				"top": "10px",
				"right": "10px",
				"left": "10px",
				"height": "50px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "dateinput";
	cpr.core.Platform.INSTANCE.register(app);
})();
