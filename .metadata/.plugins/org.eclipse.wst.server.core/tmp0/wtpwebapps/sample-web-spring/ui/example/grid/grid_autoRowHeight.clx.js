/*
 * App URI: example/grid/grid_autoRowHeight
 * Source Location: example/grid/grid_autoRowHeight.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("example/grid/grid_autoRowHeight", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * grid_autoRowHeight.js
			 * Created at 2018. 8. 27. 오전 10:59:20.
			 * 
			 * @author leeds
			 ************************************************/
			
			
			
			/*
			 * Body에서 init 이벤트 발생 시 호출.
			 * 앱이 최초 구성될 때 발생하는 이벤트 입니다.
			 */
			function onBodyInit(/* cpr.events.CEvent */ e){
				
				app.lookup("sms_autoRowHeight").send();
			}
			
			
			/*
			 * 서브미션에서 submit-success 이벤트 발생 시 호출.
			 * 통신이 성공하면 발생합니다.
			 */
			function onSms_autoRowHeightSubmitSuccess(/* cpr.events.CSubmissionEvent */ e){
				/** 
				 * @type cpr.protocols.Submission
				 */
				var sms_autoRowHeight = e.control;
				
				app.lookup("grid_autoRowHeight").redraw();
			};
			// End - User Script
			
			// Header
			app.declareBindableAppProperty("title", null);
			app.declareBindableAppProperty("explain", null);
			var dataSet_1 = new cpr.data.DataSet("ds_autoRowHeight");
			dataSet_1.parseData({
				"columns" : [
					{"name": "default"},
					{"name": "output"},
					{"name": "textarea"}
				]
			});
			app.register(dataSet_1);
			var submission_1 = new cpr.protocols.Submission("sms_autoRowHeight");
			submission_1.action = "./data/gridAutoRowData.json";
			submission_1.addResponseData(dataSet_1, false);
			if(typeof onSms_autoRowHeightSubmitSuccess == "function") {
				submission_1.addEventListener("submit-success", onSms_autoRowHeightSubmitSuccess);
			}
			app.register(submission_1);
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.pagetitle2();
			userDefinedControl_1.bind("explain").toAppProperty("explain");
			userDefinedControl_1.bind("title").toAppProperty("title");
			container.addChild(userDefinedControl_1, {
				"top": "10px",
				"right": "10px",
				"left": "10px",
				"height": "50px"
			});
			
			var grid_1 = new cpr.controls.Grid("grid_autoRowHeight");
			grid_1.readOnly = false;
			grid_1.init({
				"dataSet": app.lookup("ds_autoRowHeight"),
				"autoRowHeight": "all",
				"columnMovable": false,
				"columnResizable": false,
				"columns": [
					{"width": "50px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"}
				],
				"header": {
					"rows": [{"height": "24px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.filterable = false;
								cell.sortable = false;
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.targetColumnName = "default";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "default";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
								cell.targetColumnName = "output";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "output";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 3},
							"configurator": function(cell){
								cell.targetColumnName = "textarea";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "textarea";
							}
						}
					]
				},
				"detail": {
					"rows": [{"height": "24px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.columnType = "rowindex";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.columnName = "default";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
								cell.columnName = "output";
								cell.control = (function(){
									var output_1 = new cpr.controls.Output();
									output_1.value = "Output";
									output_1.bind("value").toDataColumn("output");
									return output_1;
								})();
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 3},
							"configurator": function(cell){
								cell.columnName = "textarea";
								cell.control = (function(){
									var textArea_1 = new cpr.controls.TextArea("txa2");
									textArea_1.bind("value").toDataColumn("textarea");
									return textArea_1;
								})();
							}
						}
					]
				}
			});
			container.addChild(grid_1, {
				"top": "80px",
				"right": "20px",
				"bottom": "10px",
				"left": "10px"
			});
			if(typeof onBodyInit == "function"){
				app.addEventListener("init", onBodyInit);
			}
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "grid_autoRowHeight";
	cpr.core.Platform.INSTANCE.register(app);
})();
