/*
 * App URI: example/component/tab_headerClickEvent
 * Source Location: example/component/tab_headerClickEvent.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("example/component/tab_headerClickEvent", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			
			var tabctxmenu = null;
			
			// tabItem 추가 번호
			var cnt = 1;
			
			/**
			 * contextmenu 생성
			 * @return menu
			 * */
			function createContextMenu(tabFolder){
				// 메뉴 컨트롤 동적 생성
				var menu = new cpr.controls.Menu("ctxmenu");
				
				// blur이벤트 핸들러 입니다.
				menu.addEventListener("blur", function() {
					// 컨트롤에 포함되어 있는 객체들을 제거합니다.
					menu.dispose();
				});
				
				// selection-change이벤트 핸들러 입니다.
				menu.addEventListener("selection-change", function(/* cpr.events.CSelectionEvent */e){
					// 컨트롤에 포함되어 있는 객체들을 제거합니다.
					menu.dispose();
					
					// 새롭게 선택된 아이템
					var newSelect = e.newSelection[0];
					
					// "closeTab" 아이템 선택 시
					if(newSelect.label == "closeTab"){
						// 선택된 탭 아이템을 제거합니다.
						tabFolder.removeTabItem(tabFolder.getSelectedTabItem());
					}
					// "closeOthers" 아이템 선택 시
					else if(newSelect.label == "closeOthers"){
						// 파라미터로 넘겨받은 탭 아이템을 제외한 나머지 탭 아이템을 닫습니다.
						tabFolder.closeOthers(tabFolder.getSelectedTabItem());
					}
					// "closeAll" 아이템 선택 시
					else{
						// 모든 탭 아이템을 닫습니다.
						tabFolder.closeAll();
					}
				});
				
				// contextmenu 아이템 입니다.
				(function(ctxmenu){
					ctxmenu.addItem(new cpr.controls.MenuItem("closeTab", "value1", "root"));
					ctxmenu.addItem(new cpr.controls.MenuItem("closeOthers", "value2", "root"));
					ctxmenu.addItem(new cpr.controls.MenuItem("closeAll", "value3", "root"));
				})(menu);
				return menu;
			}
			
			/*
			 * 탭 폴더에서 tabheader-click 이벤트 발생 시 호출.
			 * 탭 아이템의 헤더 영역을 클릭하였을 때 발생하는 이벤트 입니다.
			 */
			function onTabFolderTabheaderClick(/* cpr.events.CItemEvent */ e){
				/** 
				 * @type cpr.controls.TabFolder
				 */
				var tabFolder = e.control;
				
				// 마우스를 눌렀을 때 이벤트를 트리거 한 버튼을 나타냅니다.
				// no button = 0, left button = 1,
				// middle button = 2, right button = 3
				if(e.which == 3){
					
					var targetItem = e.item;
					// 우클릭 했을 때 targetItem으로 탭 아이템을 지정합니다.
					tabFolder.setSelectedTabItem(targetItem);
					
					// 다음 기본 동작을 방지합니다.
					e.preventDefault();
					
					// 캡처 및 버블링 단계에서 현재 이벤트의 추가 전파를 방지합니다.
					e.stopPropagation(true);
					
					if (tabctxmenu) {
						// 앱에 띄워져 있는 tabctxmenu를 제거합니다.
						app.removeFloatingControl(tabctxmenu, false);
					}
					
					// 앱이 실제 그려진 사이즈를 반환합니다. 화면에 그려지지 않은 상태인 경우는 모든 값이 0인 객체가 반환됩니다.
					var appRect = app.getActualRect();
					
					tabctxmenu = createContextMenu(tabFolder);
					tabctxmenu.style.css({
						position : "absolute",
						top : "" + (e.clientY - appRect.top) + "px",
						left : "" + (e.clientX - appRect.left) + "px",
						width : "150px"
					});
					
					// 앱 내부 특정 위치에 컨트롤을 위치시킵니다.
					app.floatControl(tabctxmenu);
					
					// tabctxmenu에 포커스 설정합니다.
					tabctxmenu.focus();
				}
			}
			
			/*
			 * "addTab" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var button = e.control;
				
				var tabItem = new cpr.controls.TabItem();
				tabItem.text = "tabItem" + cnt;
				
				var tabFolder = app.lookup("tab");
				// 탭 아이템을 추가합니다.
				tabFolder.addTabItem(tabItem);
				cnt ++;
			};
			// End - User Script
			
			// Header
			app.declareBindableAppProperty("title", null);
			app.declareBindableAppProperty("explain", null);
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 800px) and (max-width: 1023px)", "new-screen");
			app.supportMedia("all and (min-width: 500px) and (max-width: 799px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container();
			// Layout
			var formLayout_1 = new cpr.controls.layouts.FormLayout();
			formLayout_1.setColumns(["1fr", "70px", "70px"]);
			formLayout_1.setRows(["25px", "1fr"]);
			group_1.setLayout(formLayout_1);
			(function(container){
				var tabFolder_1 = new cpr.controls.TabFolder("tab");
				
				var tabItem_1 = (function(tabFolder){
					var tabItem_1 = new cpr.controls.TabItem();
					tabItem_1.text = "tab1";
					var group_2 = new cpr.controls.Container();
					// Layout
					var xYLayout_2 = new cpr.controls.layouts.XYLayout();
					group_2.setLayout(xYLayout_2);
					(function(container){
					})(group_2);
					tabItem_1.content = group_2;
					return tabItem_1;
				})(tabFolder_1);
				tabFolder_1.addTabItem(tabItem_1);
				tabFolder_1.setSelectedTabItem(tabItem_1);
				if(typeof onTabFolderTabheaderClick == "function") {
					tabFolder_1.addEventListener("tabheader-click", onTabFolderTabheaderClick);
				}
				container.addChild(tabFolder_1, {
					"colIndex": 0,
					"rowIndex": 1,
					"colSpan": 3,
					"rowSpan": 1
				});
				var button_1 = new cpr.controls.Button();
				button_1.value = "addTab";
				if(typeof onButtonClick == "function") {
					button_1.addEventListener("click", onButtonClick);
				}
				container.addChild(button_1, {
					"colIndex": 2,
					"rowIndex": 0
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "70px",
				"left": "10px",
				"width": "500px",
				"height": "350px"
			});
			
			var userDefinedControl_1 = new udc.pagetitle2();
			userDefinedControl_1.bind("title").toAppProperty("title");
			userDefinedControl_1.bind("explain").toAppProperty("explain");
			container.addChild(userDefinedControl_1, {
				"top": "10px",
				"right": "10px",
				"left": "10px",
				"height": "50px"
			});
		}
	});
	app.title = "tab_headerClickEvent";
	cpr.core.Platform.INSTANCE.register(app);
})();
