/*
 * App URI: main/main
 * Source Location: main/main.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("main/main", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			
			
			/*
			 * 사용자 정의 컨트롤에서 logout 이벤트 발생 시 호출.
			 */
			function onHeaderLogout(/* cpr.events.CUIEvent */ e){
				/** 
				 * @type udc.main.header
				 */
				var header = e.control;
				
				var subLogout = app.lookup("subLogout");
				subLogout.send();
			}
			
			/*
			 * 서브미션에서 submit-success 이벤트 발생 시 호출.
			 * 통신이 성공하면 발생합니다.
			 */
			function onSubLogoutSubmitSuccess(/* cpr.events.CSubmissionEvent */ e){
				/** 
				 * @type cpr.protocols.Submission
				 */
				var subLogout = e.control;
				
				var appId = subLogout.getMetadata("uri");
				var msg = subLogout.getMetadata("message");
				if(msg != null) {
					alert(msg);
				}
				if (appId != null) {
					// 화면이동
					cpr.core.App.load(appId, function(newapp) {
						app.close();
						newapp.createNewInstance().run();
					});
					return;
				}
			}
			
			/*
			 * 사용자 정의 컨트롤에서 close 이벤트 발생 시 호출.
			 */
			function onHeaderClose(/* cpr.events.CUIEvent */ e){
				/** 
				 * @type udc.main.header
				 */
				var header = e.control;
				
				self.close();
			}
			
			
			/*
			 * 사용자 정의 컨트롤에서 menu_before_select 이벤트 발생 시 호출.
			 */
			function onLeftMenu_before_select(/* cpr.events.CSelectionEvent */ e){
				/** 
				 * @type udc.main.left
				 */
				var left = e.control;
				e.preventDefault(); // Tree의 선택 차단
			}
			
			/*
			 * 사용자 정의 컨트롤에서 menu_select 이벤트 발생 시 호출.
			 */
			function onLeftMenu_select(/* cpr.events.CSelectionEvent */ e){
				/** 
				 * @type udc.main.left
				 */
				var left = e.control;
			}
			
			/*
			 * 사용자 정의 컨트롤에서 menu_click 이벤트 발생 시 호출.
			 */
			function onLeftMenu_click(/* cpr.events.CItemEvent */ e){
				/** 
				 * @type udc.main.left
				 */
				var left = e.control;
				
				var selectedMenu = e.item;
				
				var appId = selectedMenu.appId;
				if(appId) {
					var mainMdi = app.lookup("main_mdi");
					var items = mainMdi.getTabItems();
					if(items != null && items.length > 0) {
						var alreadyOpened = items.some(function(item) {
							if(item.content.app) { // embeddedApp
								if(item.content.app.id == appId) {
									mainMdi.setSelectedTabItem(item);
									return true;
								}
							} else { // embeddedPage
								if(item.content.src == appId) {
									mainMdi.setSelectedTabItem(item);
									return true;
								}
							}
							return false;
						});
						if(alreadyOpened == true) {
							return;
						} 
					};
					
					if(/.html$/.test(appId)) {
						mainMdi.addItemWithPage(appId, true, function(tabItem) {
							tabItem.text = selectedMenu.menuNm;
						});
					} else {
						mainMdi.addItemWithApp(appId, true, function(/* cpr.controls.TabItem */tabItem) {
							tabItem.text = selectedMenu.menuNm;
							
							tabItem.content.addEventListener("init", function(/* cpr.events.CEvent */e) {
								e.control.setAppProperty("title", selectedMenu.menuNm);
								e.control.setAppProperty("explain", selectedMenu.menuExplain);
							});
						});
					}
				}
			}
			
			var leftmenuexpended = true;
			
			/*
			 * "" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var button = e.control;
				
				var container = app.getContainer();
				var leftmenu = app.lookup("left_menu");
				var mainmdi = app.lookup("main_mdi");
				
				if(leftmenuexpended == true) {
					container.updateConstraint(leftmenu, {
						"top" : "50px",
						"width" : "0px",
						"left" : "0px",
						"bottom" : "0px"
					});
					container.updateConstraint(button, {
						"top" : "75px",
						"width" : "10px",
						"left" : "0",
						"bottom" : "0px"
					});
					container.updateConstraint(mainmdi, {
						"top" : "50px",
						"right" : "0px",
						"left" : "10px",
						"bottom" : "0px"
					});
					
					leftmenuexpended = false;
				} else {
					container.updateConstraint(leftmenu, {
						"top" : "50px",
						"width" : "300px",
						"left" : "0px",
						"bottom" : "0px"
					});
					container.updateConstraint(button, {
						"top" : "75px",
						"width" : "10px",
						"left" : "300px",
						"bottom" : "0px"
					});
					container.updateConstraint(mainmdi, {
						"top" : "50px",
						"right" : "0px",
						"left" : "310px",
						"bottom" : "0px"
					});
					
					leftmenuexpended = true;
				}
			
			}
			
			/*
			 * "+" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick2(/* cpr.events.CMouseEvent */ e){
				var treemenu = app.lookup("left_menu");
				treemenu.expand = true;
			}
			
			/*
			 * "-" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick3(/* cpr.events.CMouseEvent */ e){
				var treemenu = app.lookup("left_menu");
				treemenu.expand = false;
			}
			
			/*
			 * "전체 닫기" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick4(/* cpr.events.CMouseEvent */ e){
				var main_mdi = app.lookup("main_mdi");
				main_mdi.closeAll();
			}
			
			/*
			 * "기타 닫기" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick5(/* cpr.events.CMouseEvent */ e){
				var main_mdi = app.lookup("main_mdi");
				var selectItem = main_mdi.getSelectedTabItem();
				main_mdi.closeOthers(selectItem);
				
			}
			
			/*
			 * 사용자 정의 컨트롤에서 keyup 이벤트 발생 시 호출.
			 */
			function onLeft_menuKeyup(/* cpr.events.CKeyboardEvent */ e){
				/** 
				 * @type udc.main.left
				 */
				var left_menu = e.control;
				left_menu.filterTree();
			};
			// End - User Script
			
			// Header
			var submission_1 = new cpr.protocols.Submission("subLogout");
			submission_1.action = "../logout.do";
			if(typeof onSubLogoutSubmitSuccess == "function") {
				submission_1.addEventListener("submit-success", onSubLogoutSubmitSuccess);
			}
			app.register(submission_1);
			
			app.supportMedia("all", "main");
			
			// Configure root container
			var container = app.getContainer();
			container.style.setClasses(["cl-main"]);
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.main.header();
			if(typeof onHeaderLogout == "function") {
				userDefinedControl_1.addEventListener("logout", onHeaderLogout);
			}
			if(typeof onHeaderClose == "function") {
				userDefinedControl_1.addEventListener("close", onHeaderClose);
			}
			container.addChild(userDefinedControl_1, {
				"top": "0px",
				"right": "0px",
				"left": "0px",
				"height": "45px"
			});
			
			var mDIFolder_1 = new cpr.controls.MDIFolder("main_mdi");
			var group_1 = new cpr.controls.Container();
			// Layout
			var formLayout_1 = new cpr.controls.layouts.FormLayout();
			formLayout_1.topMargin = "3";
			formLayout_1.bottomMargin = "3";
			formLayout_1.setColumns(["90px", "90px"]);
			formLayout_1.setRows(["1fr"]);
			group_1.setLayout(formLayout_1);
			(function(container){
				var button_1 = new cpr.controls.Button("btn1");
				button_1.value = "All";
				button_1.style.setClasses(["button-close-icon"]);
				if(typeof onButtonClick4 == "function") {
					button_1.addEventListener("click", onButtonClick4);
				}
				container.addChild(button_1, {
					"colIndex": 0,
					"rowIndex": 0,
					"horizontalAlign": "fill",
					"verticalAlign": "fill",
					"width": 90
				});
				var button_2 = new cpr.controls.Button("btn2");
				button_2.value = "Others";
				button_2.style.setClasses(["button-close-icon"]);
				if(typeof onButtonClick5 == "function") {
					button_2.addEventListener("click", onButtonClick5);
				}
				container.addChild(button_2, {
					"colIndex": 1,
					"rowIndex": 0,
					"horizontalAlign": "fill",
					"verticalAlign": "fill",
					"width": 90
				});
			})(group_1);
			mDIFolder_1.addHeaderControl(group_1, {"width": 185});
			container.addChild(mDIFolder_1, {
				"top": "50px",
				"right": "0px",
				"bottom": "0px",
				"left": "310px"
			});
			
			var userDefinedControl_2 = new udc.main.left("left_menu");
			if(typeof onLeftMenu_before_select == "function") {
				userDefinedControl_2.addEventListener("menu_before_select", onLeftMenu_before_select);
			}
			if(typeof onLeftMenu_select == "function") {
				userDefinedControl_2.addEventListener("menu_select", onLeftMenu_select);
			}
			if(typeof onLeftMenu_click == "function") {
				userDefinedControl_2.addEventListener("menu_click", onLeftMenu_click);
			}
			if(typeof onLeft_menuSearch == "function") {
				userDefinedControl_2.addEventListener("search", onLeft_menuSearch);
			}
			if(typeof onLeft_menuKeyup == "function") {
				userDefinedControl_2.addEventListener("keyup", onLeft_menuKeyup);
			}
			container.addChild(userDefinedControl_2, {
				"top": "50px",
				"bottom": "0px",
				"left": "0px",
				"width": "300px"
			});
			
			var button_3 = new cpr.controls.Button();
			button_3.value = "";
			button_3.style.css({
				"border-radius" : "0px"
			});
			if(typeof onButtonClick == "function") {
				button_3.addEventListener("click", onButtonClick);
			}
			container.addChild(button_3, {
				"top": "75px",
				"bottom": "0px",
				"left": "300px",
				"width": "10px"
			});
		}
	});
	app.title = "메인";
	cpr.core.Platform.INSTANCE.register(app);
})();
