/*
 * App URI: test/test
 * Source Location: test/test.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("test/test", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * test.js
			 * Created at 2019. 5. 29. 오후 1:43:15.
			 *
			 * @author joymrk
			 ************************************************/
			
			
			
			
			/*
			 * "Button" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick(/* cpr.events.CMouseEvent */ e){
				var arr = new Array("11","11","23");
				var blob = new Blob(arr, { type: 'text/plain' });
			 
			    var objURL = URL.createObjectURL(blob);
			              	
			    // 이전에 생성된 메모리 해제
			    if (window.__Xr_objURL_forCreatingFile__) {
			        window.URL.revokeObjectURL(window.__Xr_objURL_forCreatingFile__);
			    }
			    window.__Xr_objURL_forCreatingFile__ = objURL;
			 
			    var a = document.createElement('a');
			 
			    a.download = "test.dat";
			    a.href = objURL;
			    a.click();
			}
			
			/*
			 * "Button" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick2(/* cpr.events.CMouseEvent */ e){
				console.log("init Data"); 
				console.log(app.lookup("dm1").getValue("test")); // 처음 데이터
				
				app.lookup("dm1").setValue("test", "hellow world"); // 데이터 입력
				console.log(app.lookup("dm1").getValue("test")); 
				
				app.lookup("dm1").reset(); // 리셋 처리
				
				console.log("reset Data : " + app.lookup("dm1").getValue("test")); // 리셋 후 데이터
			}
			
			
			/*
			 * "Button" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick3(/* cpr.events.CMouseEvent */ e){
				var test = 1;
				test = test << 4;
				console.log(test);
				
				var test2 = 17;
				if ((test2 & test) == 1) {
					console.log("맞음");
				}
				 
			};
			// End - User Script
			
			// Header
			var dataMap_1 = new cpr.data.DataMap("dm1");
			dataMap_1.parseData({
				"columns" : [{
					"name": "test",
					"dataType": "string",
					"defaultValue": "test"
				}]
			});
			app.register(dataMap_1);
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var button_1 = new cpr.controls.Button();
			button_1.value = "Button";
			if(typeof onButtonClick == "function") {
				button_1.addEventListener("click", onButtonClick);
			}
			container.addChild(button_1, {
				"top": "318px",
				"left": "350px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_2 = new cpr.controls.Button();
			button_2.value = "Button";
			if(typeof onButtonClick2 == "function") {
				button_2.addEventListener("click", onButtonClick2);
			}
			container.addChild(button_2, {
				"top": "318px",
				"left": "519px",
				"width": "100px",
				"height": "20px"
			});
			
			var grid_1 = new cpr.controls.Grid("grd1");
			grid_1.init({
				"columns": [
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"}
				],
				"header": {
					"rows": [{"height": "24px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 3},
							"configurator": function(cell){
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 4},
							"configurator": function(cell){
							}
						}
					]
				},
				"detail": {
					"rows": [{"height": "24px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 3},
							"configurator": function(cell){
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 4},
							"configurator": function(cell){
							}
						}
					]
				}
			});
			container.addChild(grid_1, {
				"top": "98px",
				"left": "342px",
				"width": "400px",
				"height": "200px"
			});
			
			var button_3 = new cpr.controls.Button();
			button_3.value = "Button";
			if(typeof onButtonClick3 == "function") {
				button_3.addEventListener("click", onButtonClick3);
			}
			container.addChild(button_3, {
				"top": "26px",
				"left": "36px",
				"width": "100px",
				"height": "20px"
			});
		}
	});
	app.title = "test";
	cpr.core.Platform.INSTANCE.register(app);
})();
