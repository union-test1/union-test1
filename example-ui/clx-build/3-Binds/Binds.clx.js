/*
 * App URI: 3-Binds/Binds
 * Source Location: 3-Binds/Binds.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("3-Binds/Binds", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			function onRdb1SelectionChange( /* cpr.events.CSelectionEvent */ e) {
				/** 
				 * @type cpr.controls.RadioButton
				 */
				var rdb1 = e.control;
				cpr.I18N.INSTANCE.currentLanguage = rdb1.value;
			}
			
			/*
			 * Triggered when click event is fired from Button "Show a message".
			 */
			function onButtonClick7( /* cpr.events.CMouseEvent */ e) {
				alert(cpr.I18N.INSTANCE.message("hello"));
			}
			
			function updateResult(/* cpr.events.CValueChangeEvent */ e){
				app.lookup("resultField").redraw();	
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("people");
			dataSet_1.parseData({
				"columns": [
					{"name": "name"},
					{"name": "favoriteColor"},
					{
						"name": "kor",
						"dataType": "number"
					},
					{
						"name": "eng",
						"dataType": "number"
					},
					{
						"name": "math",
						"dataType": "number"
					},
					{
						"name": "total",
						"dataType": "expression",
						"displayOnly": true,
						"expression": "kor + eng + math"
					},
					{
						"name": "avg",
						"dataType": "expression",
						"displayOnly": true,
						"expression": "ceil((kor + eng + math) / 3)"
					},
					{"name": "parent"}
				],
				"rows": [
					{"name": "Tomato", "favoriteColor": "red", "kor": "100", "eng": "50", "math": "20", "parent": "root"},
					{"name": "Bulider Kim", "favoriteColor": "blue", "kor": "40", "eng": "70", "math": "90", "parent": "Nobody"},
					{"name": "Nobody", "favoriteColor": "orange", "kor": "60", "eng": "60", "math": "40", "parent": "root"},
					{"name": "Jeeeyul Lee", "favoriteColor": "magenta", "kor": "95", "eng": "80", "math": "100", "total": "total4", "avg": "avg4", "parent": "Tomato"}
				]
			});
			app.register(dataSet_1);
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var tabFolder_1 = new cpr.controls.TabFolder();
			
			var tabItem_1 = (function(tabFolder){
				var tabItem_1 = new cpr.controls.TabItem();
				tabItem_1.text = "Language";
				var group_1 = new cpr.controls.Container();
				// Layout
				var xYLayout_2 = new cpr.controls.layouts.XYLayout();
				group_1.setLayout(xYLayout_2);
				(function(container){
					var radioButton_1 = new cpr.controls.RadioButton("rdb1");
					radioButton_1.value = "ko";
					(function(radioButton_1){
						radioButton_1.addItem(new cpr.controls.Item("한글", "ko"));
						radioButton_1.addItem(new cpr.controls.Item("English", "en"));
					})(radioButton_1);
					if(typeof onRdb1SelectionChange == "function") {
						radioButton_1.addEventListener("selection-change", onRdb1SelectionChange);
					}
					container.addChild(radioButton_1, {
						"top": "20px",
						"left": "324px",
						"width": "200px",
						"height": "28px"
					});
					var button_1 = new cpr.controls.Button();
					button_1.value = "Button";
					button_1.bind("value").toLanguage("bye");
					container.addChild(button_1, {
						"top": "24px",
						"left": "130px",
						"width": "184px",
						"height": "20px"
					});
					var button_2 = new cpr.controls.Button();
					button_2.value = "Button";
					button_2.bind("value").toLanguage("hello");
					container.addChild(button_2, {
						"top": "24px",
						"left": "20px",
						"width": "100px",
						"height": "20px"
					});
					var button_3 = new cpr.controls.Button();
					button_3.value = "Show a message";
					if(typeof onButtonClick7 == "function") {
						button_3.addEventListener("click", onButtonClick7);
					}
					container.addChild(button_3, {
						"top": "24px",
						"left": "534px",
						"width": "185px",
						"height": "20px"
					});
				})(group_1);
				tabItem_1.content = group_1;
				return tabItem_1;
			})(tabFolder_1);
			tabFolder_1.addTabItem(tabItem_1);
			
			var tabItem_2 = (function(tabFolder){
				var tabItem_2 = new cpr.controls.TabItem();
				tabItem_2.text = "Set";
				var group_2 = new cpr.controls.Container();
				// Layout
				var xYLayout_3 = new cpr.controls.layouts.XYLayout();
				group_2.setLayout(xYLayout_3);
				(function(container){
					var comboBox_1 = new cpr.controls.ComboBox("cmb1");
					comboBox_1.value = "Tomato";
					(function(comboBox_1){
						comboBox_1.setItemSet(app.lookup("people"), {
							"label": "name",
							"value": "name"
						})
					})(comboBox_1);
					container.addChild(comboBox_1, {
						"top": "20px",
						"left": "165px",
						"width": "200px",
						"height": "20px"
					});
					var listBox_1 = new cpr.controls.ListBox("lbx1");
					(function(listBox_1){
						listBox_1.setItemSet(app.lookup("people"), {
							"label": "name",
							"value": "name"
						})
					})(listBox_1);
					container.addChild(listBox_1, {
						"top": "20px",
						"left": "32px",
						"width": "123px",
						"height": "180px"
					});
					var tree_1 = new cpr.controls.Tree("tre1");
					(function(tree_1){
						tree_1.setItemSet(app.lookup("people"), {
							"label": "name",
							"value": "name",
							"parentValue": "parent"
						});
					})(tree_1);
					container.addChild(tree_1, {
						"top": "50px",
						"left": "165px",
						"width": "200px",
						"height": "150px"
					});
					var linkedListBox_1 = new cpr.controls.LinkedListBox("llb1");
					(function(linkedListBox_1){
						linkedListBox_1.setItemSet(app.lookup("people"), {
							"label": "name",
							"value": "name",
							"parentValue": "parent"
						});
					})(linkedListBox_1);
					container.addChild(linkedListBox_1, {
						"top": "21px",
						"left": "376px",
						"width": "300px",
						"height": "179px"
					});
				})(group_2);
				tabItem_2.content = group_2;
				return tabItem_2;
			})(tabFolder_1);
			tabFolder_1.addTabItem(tabItem_2);
			
			var tabItem_3 = (function(tabFolder){
				var tabItem_3 = new cpr.controls.TabItem();
				tabItem_3.text = "Data Set Bind and Expression Bind";
				var group_3 = new cpr.controls.Container();
				// Layout
				var xYLayout_4 = new cpr.controls.layouts.XYLayout();
				group_3.setLayout(xYLayout_4);
				(function(container){
					var grid_1 = linker.grid_1 = new cpr.controls.Grid("grd1");
					grid_1.init({
						"dataSet": app.lookup("people"),
						"columns": [
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"}
						],
						"header": {
							"rows": [{"height": "24px"}],
							"cells": [
								{
									"constraint": {"rowIndex": 0, "colIndex": 0},
									"configurator": function(cell){
										cell.text = "name";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 1},
									"configurator": function(cell){
										cell.text = "favoriteColor";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 2},
									"configurator": function(cell){
										cell.text = "kor";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 3},
									"configurator": function(cell){
										cell.text = "eng";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 4},
									"configurator": function(cell){
										cell.text = "math";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 5},
									"configurator": function(cell){
										cell.text = "total";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 6},
									"configurator": function(cell){
										cell.text = "avg";
									}
								}
							]
						},
						"detail": {
							"rows": [{"height": "24px"}],
							"cells": [
								{
									"constraint": {"rowIndex": 0, "colIndex": 0},
									"configurator": function(cell){
										cell.columnName = "name";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 1},
									"configurator": function(cell){
										cell.columnName = "favoriteColor";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 2},
									"configurator": function(cell){
										cell.columnName = "kor";
										cell.control = (function(){
											var numberEditor_1 = new cpr.controls.NumberEditor("nbe1");
											numberEditor_1.bind("value").toDataColumn("kor");
											return numberEditor_1;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 3},
									"configurator": function(cell){
										cell.columnName = "eng";
										cell.control = (function(){
											var numberEditor_2 = new cpr.controls.NumberEditor("nbe2");
											numberEditor_2.bind("value").toDataColumn("eng");
											return numberEditor_2;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 4},
									"configurator": function(cell){
										cell.columnName = "math";
										cell.control = (function(){
											var numberEditor_3 = new cpr.controls.NumberEditor("nbe3");
											numberEditor_3.bind("value").toDataColumn("math");
											return numberEditor_3;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 5},
									"configurator": function(cell){
										cell.columnName = "total";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 6},
									"configurator": function(cell){
										cell.columnName = "avg";
										cell.control = (function(){
											var output_1 = new cpr.controls.Output();
											output_1.value = "Output";
											output_1.style.css({
												"background-repeat" : "no-repeat",
												"background-image" : "linear-gradient(red, orange)"
											});
											output_1.style.bind("background-size").toExpression("avg + \"% 100%\"");
											output_1.bind("value").toDataColumn("avg");
											return output_1;
										})();
									}
								}
							]
						}
					});
					container.addChild(grid_1, {
						"top": "20px",
						"right": "20px",
						"left": "20px",
						"height": "175px"
					});
					var output_2 = linker.output_2 = new cpr.controls.Output("expOutput");
					output_2.value = "Output";
					output_2.bind("value").toExpression("\"My name is \" + name + \", and my max score is \" +  max(kor, eng, math) + \".\"");
					container.addChild(output_2, {
						"top": "205px",
						"right": "20px",
						"left": "20px",
						"height": "20px"
					});
				})(group_3);
				tabItem_3.content = group_3;
				return tabItem_3;
			})(tabFolder_1);
			tabFolder_1.addTabItem(tabItem_3);
			
			var tabItem_4 = (function(tabFolder){
				var tabItem_4 = new cpr.controls.TabItem();
				tabItem_4.text = "Style Binding for Elements";
				var group_4 = new cpr.controls.Container();
				// Layout
				var xYLayout_5 = new cpr.controls.layouts.XYLayout();
				group_4.setLayout(xYLayout_5);
				(function(container){
					var comboBox_2 = new cpr.controls.ComboBox("cmb2");
					comboBox_2.value = "Tomato";
					comboBox_2.displayExp = "name + \" (\" + avg + \")\"";
					comboBox_2.style.item.bind("color").toExpression([
						"switch(avg){",
						"\twhen avg >= 90 : \"green\"",
						"\twhen avg >= 60 : \"orange\"",
						"\tdefault : \"red\"",
						"}"
					].join("\n"));
					(function(comboBox_2){
						comboBox_2.setItemSet(app.lookup("people"), {
							"label": "name",
							"value": "name"
						})
					})(comboBox_2);
					container.addChild(comboBox_2, {
						"top": "20px",
						"left": "20px",
						"width": "402px",
						"height": "27px"
					});
					var group_5 = new cpr.controls.Container();
					// Layout
					var formLayout_1 = new cpr.controls.layouts.FormLayout();
					formLayout_1.setColumns(["1fr", "30px", "1fr", "30px", "1fr"]);
					formLayout_1.setRows(["1fr"]);
					group_5.setLayout(formLayout_1);
					(function(container){
						var inputBox_1 = new cpr.controls.InputBox("operandA");
						inputBox_1.value = "9";
						inputBox_1.style.css({
							"text-align" : "right"
						});
						if(typeof updateResult == "function") {
							inputBox_1.addEventListener("value-change", updateResult);
						}
						container.addChild(inputBox_1, {
							"colIndex": 0,
							"rowIndex": 0
						});
						var inputBox_2 = new cpr.controls.InputBox("operandB");
						inputBox_2.value = "9";
						inputBox_2.style.css({
							"text-align" : "right"
						});
						if(typeof updateResult == "function") {
							inputBox_2.addEventListener("value-change", updateResult);
						}
						container.addChild(inputBox_2, {
							"colIndex": 2,
							"rowIndex": 0
						});
						var inputBox_3 = new cpr.controls.InputBox("resultField");
						inputBox_3.style.css({
							"text-align" : "right"
						});
						inputBox_3.bind("value").toExpression("parseInt(#operandA.value) * parseInt(#operandB.value)");
						container.addChild(inputBox_3, {
							"colIndex": 4,
							"rowIndex": 0
						});
						var output_3 = new cpr.controls.Output();
						output_3.value = "x";
						output_3.style.css({
							"text-align" : "center"
						});
						container.addChild(output_3, {
							"colIndex": 1,
							"rowIndex": 0
						});
						var output_4 = new cpr.controls.Output();
						output_4.value = "=";
						output_4.style.css({
							"text-align" : "center"
						});
						container.addChild(output_4, {
							"colIndex": 3,
							"rowIndex": 0
						});
					})(group_5);
					container.addChild(group_5, {
						"top": "78px",
						"left": "20px",
						"width": "400px",
						"height": "25px"
					});
				})(group_4);
				tabItem_4.content = group_4;
				return tabItem_4;
			})(tabFolder_1);
			tabFolder_1.addTabItem(tabItem_4);
			tabFolder_1.setSelectedTabItem(tabItem_1);
			container.addChild(tabFolder_1, {
				"top": "20px",
				"right": "20px",
				"left": "20px",
				"height": "566px"
			});
			// Linking
			linker.output_2.setBindContext(new cpr.bind.GridSelectionContext(linker.grid_1));
		}
	});
	app.title = "Binds";
	cpr.core.Platform.INSTANCE.register(app);
})();
