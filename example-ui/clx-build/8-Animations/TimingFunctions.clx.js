/*
 * App URI: 8-Animations/TimingFunctions
 * Source Location: 8-Animations/TimingFunctions.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("8-Animations/TimingFunctions", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			function animateButton( /* cpr.events.CMouseEvent */ e) {
				/** @type cpr.controls.Button */
				var control = e.control;
				var timingFunction = cpr.animation.TimingFunction[control.value];
			
				animate(control, timingFunction);
			}
			
			/**
			 * 
			 * @param {cpr.controls.UIControl} control
			 * @param {String} timingFunction
			 */
			function animate(control, timingFunction) {
				var oldTransform = control.style.css("transform");
				if (!oldTransform || oldTransform == "none") {
					control.style.animateTo({
						transform: "translateX(300px)"
					}, 1, timingFunction);
				} else {
					control.style.animateTo({
						transform: "none"
					}, 1, timingFunction);
				}
			}
			
			/*
			 * "All" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var button = e.control;
				app.lookup("grp").getChildren().forEach(function(each, idx) {
					if (each != button) {
						/** @type cpr.controls.Button */
						var btn = each;
						var timingFunction = cpr.animation.TimingFunction[btn.value];
						animate(btn, timingFunction);
					}
				});
			}
			
			/*
			 * Body에서 init 이벤트 발생 시 호출.
			 * 앱이 최초 구성될 때 발생하는 이벤트 입니다.
			 */
			function onBodyInit( /* cpr.events.CEvent */ e) {
				app.lookup("grp").getChildren().forEach(function( /* cpr.controls.UIControl */ each) {
					each.style.animateFrom({
						opacity: "0",
						filter: "alpha(opacity=10)",
						transform: "translateX(-50%) rotateY(-90deg)"
					}, Math.random() * 1 + 0.3);
				});
			
				app.lookup("grp").style.animateFrom({
					"transform": "translateZ(-2000px) rotateY(-180deg)"
				}, 0.5, cpr.animation.TimingFunction.EASE_OUT_CUBIC);
			}
			// End - User Script
			
			// Header
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var button_1 = new cpr.controls.Button();
			button_1.value = "All";
			if(typeof onButtonClick == "function") {
				button_1.addEventListener("click", onButtonClick);
			}
			container.addChild(button_1, {
				"top": "6px",
				"left": "20px",
				"width": "169px",
				"height": "20px"
			});
			
			var group_1 = new cpr.controls.Container("grp");
			group_1.style.css({
				"border-right-style" : "solid",
				"border-top-width" : "1px",
				"border-bottom-color" : "gray",
				"border-right-width" : "1px",
				"border-left-color" : "gray",
				"border-right-color" : "gray",
				"border-left-width" : "1px",
				"border-top-style" : "solid",
				"background-color" : "#eeeeee",
				"border-left-style" : "solid",
				"border-bottom-width" : "1px",
				"border-top-color" : "gray",
				"border-bottom-style" : "solid",
				"background-image" : "none"
			});
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var button_2 = new cpr.controls.Button();
				button_2.value = "EASE_IN_BACK";
				if(typeof animateButton == "function") {
					button_2.addEventListener("click", animateButton);
				}
				container.addChild(button_2, {
					"top": "230px",
					"left": "35px",
					"width": "180px",
					"height": "20px"
				});
				var button_3 = new cpr.controls.Button();
				button_3.value = "EASE_IN_CUBIC";
				if(typeof animateButton == "function") {
					button_3.addEventListener("click", animateButton);
				}
				container.addChild(button_3, {
					"top": "140px",
					"left": "35px",
					"width": "180px",
					"height": "20px"
				});
				var button_4 = new cpr.controls.Button();
				button_4.value = "EASE_OUT_BACK";
				if(typeof animateButton == "function") {
					button_4.addEventListener("click", animateButton);
				}
				container.addChild(button_4, {
					"top": "260px",
					"left": "35px",
					"width": "180px",
					"height": "20px"
				});
				var button_5 = new cpr.controls.Button();
				button_5.value = "EASE_OUT_CUBIC";
				if(typeof animateButton == "function") {
					button_5.addEventListener("click", animateButton);
				}
				container.addChild(button_5, {
					"top": "170px",
					"left": "35px",
					"width": "180px",
					"height": "20px"
				});
				var button_6 = new cpr.controls.Button();
				button_6.value = "LINEAR";
				if(typeof animateButton == "function") {
					button_6.addEventListener("click", animateButton);
				}
				container.addChild(button_6, {
					"top": "20px",
					"left": "35px",
					"width": "180px",
					"height": "20px"
				});
				var button_7 = new cpr.controls.Button();
				button_7.value = "EASE_IN";
				if(typeof animateButton == "function") {
					button_7.addEventListener("click", animateButton);
				}
				container.addChild(button_7, {
					"top": "50px",
					"left": "35px",
					"width": "180px",
					"height": "20px"
				});
				var button_8 = new cpr.controls.Button();
				button_8.value = "EASE_IN_OUT";
				if(typeof animateButton == "function") {
					button_8.addEventListener("click", animateButton);
				}
				container.addChild(button_8, {
					"top": "110px",
					"left": "35px",
					"width": "180px",
					"height": "20px"
				});
				var button_9 = new cpr.controls.Button();
				button_9.value = "EASE_IN_OUT_CUBIC";
				if(typeof animateButton == "function") {
					button_9.addEventListener("click", animateButton);
				}
				container.addChild(button_9, {
					"top": "200px",
					"left": "35px",
					"width": "180px",
					"height": "20px"
				});
				var button_10 = new cpr.controls.Button();
				button_10.value = "EASE_OUT";
				if(typeof animateButton == "function") {
					button_10.addEventListener("click", animateButton);
				}
				container.addChild(button_10, {
					"top": "80px",
					"left": "35px",
					"width": "180px",
					"height": "20px"
				});
				var button_11 = new cpr.controls.Button();
				button_11.value = "EASE_IN_OUT_BACK";
				if(typeof animateButton == "function") {
					button_11.addEventListener("click", animateButton);
				}
				container.addChild(button_11, {
					"top": "290px",
					"left": "35px",
					"width": "180px",
					"height": "20px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "36px",
				"left": "20px",
				"width": "553px",
				"height": "344px"
			});
			if(typeof onBodyInit == "function"){
				app.addEventListener("init", onBodyInit);
			}
		}
	});
	app.title = "TimingFunctions";
	cpr.core.Platform.INSTANCE.register(app);
})();
