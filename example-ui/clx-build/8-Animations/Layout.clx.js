/*
 * App URI: 8-Animations/Layout
 * Source Location: 8-Animations/Layout.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("8-Animations/Layout", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/*
			 * 
			 * Body에서 init 이벤트 발생 시 호출.
			 * 앱이 최초 구성될 때 발생하는 이벤트 입니다.
			 */
			function onBodyInit( /* cpr.events.CEvent */ e) {
				var combo = app.lookup("cmb1");
			
				/*
				 * 타이밍 함수들을 콤보 박스의 아이템으로 등록.
				 */
				Object.keys(cpr.animation.TimingFunction).forEach(function( /* String */ each) {
					if (typeof cpr.animation.TimingFunction[each] == "string") {
						combo.addItem(new cpr.controls.Item(each, cpr.animation.TimingFunction[each]));
					}
				});
			
				combo.value = cpr.animation.TimingFunction.EASE_IN_OUT_BACK;
			}
			
			/*
			 * "Click Me" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var button = e.control;
			
				app.getContainer().updateConstraint(button, {
					left: Math.random() * 400 + "px",
					top: Math.random() * 300 + 60 + "px",
					width: Math.random() * 100 + 100 + "px",
					height: Math.random() * 30 + 25 + "px"
				});
			}
			
			/*
			 * 슬라이더에서 value-change 이벤트 발생 시 호출.
			 * 애니메이션 길이 변경.
			 */
			function onSld1ValueChange( /* cpr.events.CValueChangeEvent */ e) {
				cpr.animation.TimingFunction
				/** 
				 * @type cpr.controls.Slider
				 */
				var sld1 = e.control;
				app.getContainer().getLayout().animationDuration = parseFloat(sld1.value);
				app.lookup("durationLabel").value = sld1.value + "s";
			
			}
			
			/*
			 * 콤보 박스에서 selection-change 이벤트 발생 시 호출.
			 * 애니메이션 타이밍 함수 변경.
			 */
			function onCmb1SelectionChange( /* cpr.events.CSelectionEvent */ e) {
				/** 
				 * @type cpr.controls.ComboBox
				 */
				var cmb1 = e.control;
				app.getContainer().getLayout().animationTimingFunction = cmb1.value;
			}
			// End - User Script
			
			// Header
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			xYLayout_1.animationDuration = 0.3;
			xYLayout_1.animationTimingFunction = cpr.animation.TimingFunction.EASE_IN_OUT_BACK;
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var button_1 = new cpr.controls.Button();
			button_1.value = "Click Me";
			if(typeof onButtonClick == "function") {
				button_1.addEventListener("click", onButtonClick);
			}
			container.addChild(button_1, {
				"top": "50px",
				"left": "20px",
				"width": "150px",
				"height": "33px"
			});
			
			var button_2 = new cpr.controls.Button();
			button_2.value = "Click Me";
			if(typeof onButtonClick == "function") {
				button_2.addEventListener("click", onButtonClick);
			}
			container.addChild(button_2, {
				"top": "93px",
				"left": "20px",
				"width": "150px",
				"height": "33px"
			});
			
			var button_3 = new cpr.controls.Button();
			button_3.value = "Click Me";
			if(typeof onButtonClick == "function") {
				button_3.addEventListener("click", onButtonClick);
			}
			container.addChild(button_3, {
				"top": "136px",
				"left": "20px",
				"width": "150px",
				"height": "33px"
			});
			
			var group_1 = new cpr.controls.Container();
			group_1.style.setClasses(["cl-form-group"]);
			group_1.style.css({
				"border-radius" : "10px"
			});
			// Layout
			var formLayout_1 = new cpr.controls.layouts.FormLayout();
			formLayout_1.topMargin = "5";
			formLayout_1.rightMargin = "5";
			formLayout_1.bottomMargin = "5";
			formLayout_1.leftMargin = "5";
			formLayout_1.horizontalSpacing = "10";
			formLayout_1.verticalSpacing = "10";
			formLayout_1.horizontalSeparatorWidth = 1;
			formLayout_1.verticalSeparatorWidth = 1;
			formLayout_1.setColumns(["100px", "50px", "1fr"]);
			formLayout_1.setUseColumnShade(0, true);
			formLayout_1.setRows(["1fr", "1fr"]);
			group_1.setLayout(formLayout_1);
			(function(container){
				var output_1 = new cpr.controls.Output();
				output_1.value = "애니메이션 길이";
				container.addChild(output_1, {
					"colIndex": 0,
					"rowIndex": 0
				});
				var output_2 = new cpr.controls.Output("durationLabel");
				output_2.value = "0.3s";
				container.addChild(output_2, {
					"colIndex": 1,
					"rowIndex": 0
				});
				var slider_1 = new cpr.controls.Slider("sld1");
				slider_1.value = "0.3";
				slider_1.min = 0.3;
				slider_1.max = 2.0;
				slider_1.step = 0.1;
				if(typeof onSld1ValueChange == "function") {
					slider_1.addEventListener("value-change", onSld1ValueChange);
				}
				container.addChild(slider_1, {
					"colIndex": 2,
					"rowIndex": 0
				});
				var comboBox_1 = new cpr.controls.ComboBox("cmb1");
				comboBox_1.delimiter = "|";
				comboBox_1.preventInput = true;
				(function(comboBox_1){
				})(comboBox_1);
				if(typeof onCmb1SelectionChange == "function") {
					comboBox_1.addEventListener("selection-change", onCmb1SelectionChange);
				}
				container.addChild(comboBox_1, {
					"colIndex": 1,
					"rowIndex": 1,
					"colSpan": 2,
					"rowSpan": 1
				});
				var output_3 = new cpr.controls.Output();
				output_3.value = "타이밍 함수";
				container.addChild(output_3, {
					"colIndex": 0,
					"rowIndex": 1
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "5px",
				"right": "5px",
				"width": "400px",
				"height": "84px"
			});
			if(typeof onBodyInit == "function"){
				app.addEventListener("init", onBodyInit);
			}
		}
	});
	app.title = "Layout";
	cpr.core.Platform.INSTANCE.register(app);
})();
