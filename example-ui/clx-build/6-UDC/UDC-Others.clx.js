/*
 * App URI: 6-UDC/UDC-Others
 * Source Location: 6-UDC/UDC-Others.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("6-UDC/UDC-Others", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			function onCmb1SelectionChange( /* cpr.events.CSelectionEvent */ e) {
				app.lookup("sbtn").redraw();
			}
			
			function onSegmentedButtonValueChange( /* cpr.events.CSelectionEvent */ e) {
				/** 
				 * @type udc.SegmentedButton
				 */
				var segmentedButton = e.control;
				app.lookup("cmb1").redraw();
			}
			
			/*
			 * "차트 로드" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var button = e.control;
				app.lookup("densitySms").send().then(function() {
					var map = app.lookup("densityMap");
					map.redraw();
					map.style.animateFrom({
						"opacity": "0"
					});
				})
			}
			
			/*
			 * "Button" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick2( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var button = e.control;
				app.lookup("grd2").commitData();
				app.lookup("densityMap").redraw();
			}
			
			/*
			 * "추가" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick3( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var button = e.control;
				var grid = app.lookup("grd3");
				var row = grid.insertRow();
				row.setValue("label", "신규")
				row.setValue("value", "value" + row.getIndex());
			
				grid.selectRows(row.getIndex());
				grid.focusCell(row.getIndex(), 0);
				grid.setEditRowIndex(row.getIndex(), true);
			}
			
			/*
			 * "저장" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick4( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var button = e.control;
				app.lookup("grd3").commitData();
				app.lookup("treeGraph").redraw();
			}
			
			/*
			 * "저장" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick5( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var button = e.control;
				var dataURL = app.lookup("signPad").getData();
				app.lookup("signImg").src = dataURL;
				app.lookup("signDataField").value = dataURL;
			}
			
			/*
			 * "삭제" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick6(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var button = e.control;
				app.lookup("signPad").clear();
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("ds1");
			dataSet_1.parseData({
				"columns": [
					{
						"name": "weekday",
						"dataType": "number"
					},
					{
						"name": "start",
						"dataType": "number"
					},
					{
						"name": "end",
						"dataType": "number"
					},
					{
						"name": "text",
						"dataType": "string"
					},
					{"name": "color"}
				],
				"rows": [
					{"weekday": "1", "start": "1", "end": "2", "text": "text1", "color": "red"},
					{"weekday": "0", "start": "3", "end": "4", "text": "text2", "color": "orange"},
					{"weekday": "2", "start": "7", "end": "9", "text": "text3", "color": "blue"},
					{"weekday": "3", "start": "1", "end": "3", "text": "text4", "color": "magenta"},
					{"weekday": "5", "start": "4", "end": "7", "text": "text5", "color": "aliceblue"},
					{"weekday": "4", "start": "5", "end": "9", "text": "text6", "color": "cornflowerblue"},
					{"weekday": "6", "start": "3", "end": "6", "text": "text7", "color": "green"}
				]
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("ds2");
			dataSet_2.parseData({
				"columns": [
					{
						"name": "weekday",
						"dataType": "number"
					},
					{
						"name": "start",
						"dataType": "number"
					},
					{
						"name": "end",
						"dataType": "number"
					},
					{
						"name": "text",
						"dataType": "string"
					},
					{"name": "color"}
				],
				"rows": [
					{"weekday": "1", "start": "7", "end": "8", "text": "History", "color": "red"},
					{"weekday": "0", "start": "1", "end": "2", "text": "English", "color": "orange"},
					{"weekday": "2", "start": "3", "end": "6", "text": "Math", "color": "blue"},
					{"weekday": "3", "start": "4", "end": "6", "text": "Topology", "color": "magenta"},
					{"weekday": "5", "start": "3", "end": "6", "text": "Science", "color": "aliceblue"},
					{"weekday": "4", "start": "2", "end": "3", "text": "Art", "color": "cornflowerblue"},
					{"weekday": "6", "start": "7", "end": "8", "text": "Coding", "color": "green"}
				]
			});
			app.register(dataSet_2);
			
			var dataSet_3 = linker.dataSet_3 = new cpr.data.DataSet("buttonData");
			dataSet_3.parseData({
				"columns": [
					{"name": "label"},
					{"name": "value"}
				],
				"rows": [
					{"label": "Red", "value": "red"},
					{"label": "Green", "value": "green"},
					{"label": "Blue", "value": "blue"},
					{"label": "Orange", "value": "orange"}
				]
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("segBtnList");
			dataSet_4.parseData({
				"columns": [
					{"name": "column1"},
					{"name": "column2"}
				],
				"rows": [
					{"column1": "column11", "column2": "red"},
					{"column1": "column12", "column2": "orange"},
					{"column1": "column13", "column2": "green"},
					{"column1": "column14", "column2": "blue"},
					{"column1": "column15", "column2": "red"}
				]
			});
			app.register(dataSet_4);
			
			var dataSet_5 = linker.dataSet_5 = new cpr.data.DataSet("density");
			dataSet_5.parseData({
				"columns": [
					{"name": "eruptions"},
					{"name": "waiting"}
				],
				"rows": [
					{"eruptions": "1.1", "waiting": "30"},
					{"eruptions": "1.2", "waiting": "40"},
					{"eruptions": "0.9", "waiting": "35"},
					{"eruptions": "1.09", "waiting": "35"}
				]
			});
			app.register(dataSet_5);
			
			var dataSet_6 = linker.dataSet_6 = new cpr.data.DataSet("graph");
			dataSet_6.parseData({
				"columns": [
					{"name": "label"},
					{"name": "value"},
					{"name": "parent"}
				],
				"rows": [
					{"label": "토마토 시스템", "value": "tomato_system"},
					{"label": "기술연구소", "value": "lab", "parent": "tomato_system"},
					{"label": "eXbulder 6 팀", "value": "eb6-team", "parent": "lab"},
					{"label": "대학 사업부", "value": "univ", "parent": "tomato_system"},
					{"label": "전략 사업 본부", "value": "strategy", "parent": "tomato_system"},
					{"label": "테스트 팀", "value": "test", "parent": "lab"}
				]
			});
			app.register(dataSet_6);
			var dataMap_1 = new cpr.data.DataMap("dm1");
			dataMap_1.parseData({
				"columns" : [{
					"name": "title",
					"defaultValue": "데이터 맵의 타이틀"
				}]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("buttonValue");
			dataMap_2.parseData({
				"columns" : [{
					"name": "value",
					"defaultValue": "green"
				}]
			});
			app.register(dataMap_2);
			var submission_1 = new cpr.protocols.Submission("densitySms");
			submission_1.action = "6-UDC/density.json";
			submission_1.addResponseData(dataSet_5, false);
			app.register(submission_1);
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var tabFolder_1 = new cpr.controls.TabFolder();
			
			var tabItem_1 = (function(tabFolder){
				var tabItem_1 = new cpr.controls.TabItem();
				tabItem_1.text = "UDC 컨트롤들";
				var group_1 = new cpr.controls.Container();
				// Layout
				var xYLayout_2 = new cpr.controls.layouts.XYLayout();
				group_1.setLayout(xYLayout_2);
				(function(container){
					var userDefinedControl_1 = linker.userDefinedControl_1 = new udc.SegmentedButton("sbtn");
					userDefinedControl_1.dataSet = app.lookup("buttonData");
					userDefinedControl_1.value = "blue";
					userDefinedControl_1.bind("value").toDataMap(app.lookup("buttonValue"), "value");
					if(typeof onSegmentedButtonValueChange == "function") {
						userDefinedControl_1.addEventListener("value-change", onSegmentedButtonValueChange);
					}
					container.addChild(userDefinedControl_1, {
						"top": "50px",
						"left": "20px",
						"width": "300px",
						"height": "30px"
					});
					var userDefinedControl_2 = new udc.Twitter();
					container.addChild(userDefinedControl_2, {
						"top": "90px",
						"left": "20px",
						"width": "300px",
						"height": "30px"
					});
					var comboBox_1 = new cpr.controls.ComboBox("cmb1");
					comboBox_1.bind("value").toDataMap(app.lookup("buttonValue"), "value");
					(function(comboBox_1){
						comboBox_1.setItemSet(app.lookup("buttonData"), {
							"label": "label",
							"value": "value"
						})
					})(comboBox_1);
					if(typeof onCmb1SelectionChange == "function") {
						comboBox_1.addEventListener("selection-change", onCmb1SelectionChange);
					}
					container.addChild(comboBox_1, {
						"top": "20px",
						"left": "20px",
						"width": "300px",
						"height": "20px"
					});
				})(group_1);
				tabItem_1.content = group_1;
				return tabItem_1;
			})(tabFolder_1);
			tabFolder_1.addTabItem(tabItem_1);
			
			var tabItem_2 = (function(tabFolder){
				var tabItem_2 = new cpr.controls.TabItem();
				tabItem_2.text = "그리드 &UDC 컨트롤";
				var group_2 = new cpr.controls.Container();
				// Layout
				var xYLayout_3 = new cpr.controls.layouts.XYLayout();
				group_2.setLayout(xYLayout_3);
				(function(container){
					var grid_1 = new cpr.controls.Grid("grd1");
					grid_1.init({
						"dataSet": app.lookup("segBtnList"),
						"columns": [
							{"width": "100px"},
							{"width": "341px"}
						],
						"header": {
							"rows": [{"height": "24px"}],
							"cells": [
								{
									"constraint": {"rowIndex": 0, "colIndex": 0},
									"configurator": function(cell){
										cell.text = "column1";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 1},
									"configurator": function(cell){
										cell.text = "column2";
									}
								}
							]
						},
						"detail": {
							"rows": [{"height": "24px"}],
							"cells": [
								{
									"constraint": {"rowIndex": 0, "colIndex": 0},
									"configurator": function(cell){
										cell.columnName = "column1";
										cell.control = (function(){
											var output_1 = new cpr.controls.Output();
											output_1.value = "Output";
											output_1.style.bind("color").toDataColumn("column2");
											output_1.bind("value").toDataColumn("column1");
											return output_1;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 1},
									"configurator": function(cell){
										cell.columnName = "column2";
										cell.control = (function(){
											var userDefinedControl_3 = linker.userDefinedControl_3 = new udc.SegmentedButton();
											userDefinedControl_3.dataSet = app.lookup("buttonData");
											userDefinedControl_3.bind("value").toDataColumn("column2");
											return userDefinedControl_3;
										})();
									}
								}
							]
						}
					});
					container.addChild(grid_1, {
						"top": "20px",
						"right": "20px",
						"bottom": "20px",
						"left": "20px"
					});
				})(group_2);
				tabItem_2.content = group_2;
				return tabItem_2;
			})(tabFolder_1);
			tabFolder_1.addTabItem(tabItem_2);
			
			var tabItem_3 = (function(tabFolder){
				var tabItem_3 = new cpr.controls.TabItem();
				tabItem_3.text = "화산 활동 모니터";
				var group_3 = new cpr.controls.Container();
				// Layout
				var xYLayout_4 = new cpr.controls.layouts.XYLayout();
				group_3.setLayout(xYLayout_4);
				(function(container){
					var userDefinedControl_4 = linker.userDefinedControl_4 = new udc.DensityMap("densityMap");
					userDefinedControl_4.dataSet = app.lookup("density");
					userDefinedControl_4.xTitle = "휴지기(분)";
					userDefinedControl_4.yTitle = "분출시간(분)";
					userDefinedControl_4.xColumn = "waiting";
					userDefinedControl_4.yColumn = "eruptions";
					userDefinedControl_4.style.css({
						"border-right-style" : "solid",
						"border-top-width" : "1px",
						"border-bottom-color" : "blue",
						"border-left-style" : "solid",
						"border-right-width" : "1px",
						"border-bottom-width" : "1px",
						"border-left-color" : "blue",
						"border-top-color" : "blue",
						"border-bottom-style" : "solid",
						"border-right-color" : "blue",
						"border-left-width" : "1px",
						"border-top-style" : "solid"
					});
					container.addChild(userDefinedControl_4, {
						"top": "50px",
						"right": "20px",
						"left": "20px",
						"height": "263px"
					});
					var button_1 = new cpr.controls.Button();
					button_1.value = "차트 로드";
					if(typeof onButtonClick == "function") {
						button_1.addEventListener("click", onButtonClick);
					}
					container.addChild(button_1, {
						"top": "20px",
						"left": "20px",
						"width": "100px",
						"height": "20px"
					});
					var grid_2 = new cpr.controls.Grid("grd2");
					grid_2.readOnly = false;
					grid_2.init({
						"dataSet": app.lookup("density"),
						"columnMovable": false,
						"columnResizable": false,
						"columns": [
							{"width": "100px"},
							{"width": "100px"}
						],
						"header": {
							"rows": [{"height": "24px"}],
							"cells": [
								{
									"constraint": {"rowIndex": 0, "colIndex": 0},
									"configurator": function(cell){
										cell.targetColumnName = "eruptions";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "분출시간(분)";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 1},
									"configurator": function(cell){
										cell.targetColumnName = "waiting";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "휴지기(분)";
									}
								}
							]
						},
						"detail": {
							"rows": [{"height": "24px"}],
							"cells": [
								{
									"constraint": {"rowIndex": 0, "colIndex": 0},
									"configurator": function(cell){
										cell.columnName = "eruptions";
										cell.control = (function(){
											var inputBox_1 = new cpr.controls.InputBox("ipb1");
											inputBox_1.bind("value").toDataColumn("eruptions");
											return inputBox_1;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 1},
									"configurator": function(cell){
										cell.columnName = "waiting";
										cell.control = (function(){
											var inputBox_2 = new cpr.controls.InputBox("ipb2");
											inputBox_2.bind("value").toDataColumn("waiting");
											return inputBox_2;
										})();
									}
								}
							]
						}
					});
					container.addChild(grid_2, {
						"top": "353px",
						"right": "20px",
						"bottom": "20px",
						"left": "20px"
					});
					var button_2 = new cpr.controls.Button();
					button_2.value = "저장";
					if(typeof onButtonClick2 == "function") {
						button_2.addEventListener("click", onButtonClick2);
					}
					container.addChild(button_2, {
						"top": "323px",
						"right": "20px",
						"width": "100px",
						"height": "20px"
					});
				})(group_3);
				tabItem_3.content = group_3;
				return tabItem_3;
			})(tabFolder_1);
			tabFolder_1.addTabItem(tabItem_3);
			
			var tabItem_4 = (function(tabFolder){
				var tabItem_4 = new cpr.controls.TabItem();
				tabItem_4.text = "조직도";
				var group_4 = new cpr.controls.Container();
				// Layout
				var xYLayout_5 = new cpr.controls.layouts.XYLayout();
				group_4.setLayout(xYLayout_5);
				(function(container){
					var userDefinedControl_5 = linker.userDefinedControl_5 = new udc.TreeGraph("treeGraph");
					userDefinedControl_5.dataSet = app.lookup("graph");
					userDefinedControl_5.labelColumn = "label";
					userDefinedControl_5.parentColumn = "parent";
					userDefinedControl_5.valueColumn = "value";
					userDefinedControl_5.style.css({
						"border-right-style" : "solid",
						"border-top-width" : "1px",
						"border-bottom-color" : "#cccccc",
						"border-left-style" : "solid",
						"border-right-width" : "1px",
						"border-bottom-width" : "1px",
						"border-left-color" : "#cccccc",
						"border-top-color" : "#cccccc",
						"border-bottom-style" : "solid",
						"border-right-color" : "#cccccc",
						"border-left-width" : "1px",
						"border-top-style" : "solid"
					});
					container.addChild(userDefinedControl_5, {
						"top": "20px",
						"right": "20px",
						"left": "20px",
						"height": "298px"
					});
					var grid_3 = new cpr.controls.Grid("grd3");
					grid_3.readOnly = false;
					grid_3.init({
						"dataSet": app.lookup("graph"),
						"columnMovable": false,
						"columnResizable": false,
						"columns": [
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"}
						],
						"header": {
							"rows": [{"height": "24px"}],
							"cells": [
								{
									"constraint": {"rowIndex": 0, "colIndex": 0},
									"configurator": function(cell){
										cell.targetColumnName = "label";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "이름";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 1},
									"configurator": function(cell){
										cell.targetColumnName = "value";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "값";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 2},
									"configurator": function(cell){
										cell.targetColumnName = "parent";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "부모 값";
									}
								}
							]
						},
						"detail": {
							"rows": [{"height": "24px"}],
							"cells": [
								{
									"constraint": {"rowIndex": 0, "colIndex": 0},
									"configurator": function(cell){
										cell.columnName = "label";
										cell.control = (function(){
											var inputBox_3 = new cpr.controls.InputBox("ipb3");
											inputBox_3.bind("value").toDataColumn("label");
											return inputBox_3;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 1},
									"configurator": function(cell){
										cell.columnName = "value";
										cell.control = (function(){
											var inputBox_4 = new cpr.controls.InputBox("ipb4");
											inputBox_4.bind("value").toDataColumn("value");
											return inputBox_4;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 2},
									"configurator": function(cell){
										cell.columnName = "parent";
										cell.control = (function(){
											var inputBox_5 = new cpr.controls.InputBox("ipb5");
											inputBox_5.bind("value").toDataColumn("parent");
											return inputBox_5;
										})();
									}
								}
							]
						}
					});
					container.addChild(grid_3, {
						"top": "367px",
						"right": "20px",
						"bottom": "20px",
						"left": "20px"
					});
					var button_3 = new cpr.controls.Button();
					button_3.value = "추가";
					if(typeof onButtonClick3 == "function") {
						button_3.addEventListener("click", onButtonClick3);
					}
					container.addChild(button_3, {
						"top": "337px",
						"right": "130px",
						"width": "100px",
						"height": "20px"
					});
					var button_4 = new cpr.controls.Button();
					button_4.value = "저장";
					if(typeof onButtonClick4 == "function") {
						button_4.addEventListener("click", onButtonClick4);
					}
					container.addChild(button_4, {
						"top": "337px",
						"right": "20px",
						"width": "100px",
						"height": "20px"
					});
				})(group_4);
				tabItem_4.content = group_4;
				return tabItem_4;
			})(tabFolder_1);
			tabFolder_1.addTabItem(tabItem_4);
			
			var tabItem_5 = (function(tabFolder){
				var tabItem_5 = new cpr.controls.TabItem();
				tabItem_5.text = "서명 패드";
				var group_5 = new cpr.controls.Container();
				// Layout
				var xYLayout_6 = new cpr.controls.layouts.XYLayout();
				group_5.setLayout(xYLayout_6);
				(function(container){
					var userDefinedControl_6 = new udc.SignPad("signPad");
					userDefinedControl_6.strokeWidth = 3;
					userDefinedControl_6.style.css({
						"border-right-style" : "solid",
						"border-top-width" : "1px",
						"border-bottom-color" : "gray",
						"border-right-width" : "1px",
						"border-left-color" : "gray",
						"border-right-color" : "gray",
						"border-left-width" : "1px",
						"border-top-style" : "solid",
						"background-color" : "aliceblue",
						"border-left-style" : "solid",
						"border-bottom-width" : "1px",
						"border-top-color" : "gray",
						"border-bottom-style" : "solid",
						"background-image" : "none"
					});
					container.addChild(userDefinedControl_6, {
						"top": "20px",
						"left": "28px",
						"width": "400px",
						"height": "300px"
					});
					var image_1 = new cpr.controls.Image("signImg");
					container.addChild(image_1, {
						"top": "80px",
						"left": "438px",
						"width": "100px",
						"height": "75px"
					});
					var button_5 = new cpr.controls.Button();
					button_5.value = "저장";
					if(typeof onButtonClick5 == "function") {
						button_5.addEventListener("click", onButtonClick5);
					}
					container.addChild(button_5, {
						"top": "20px",
						"left": "438px",
						"width": "100px",
						"height": "20px"
					});
					var button_6 = new cpr.controls.Button();
					button_6.value = "삭제";
					if(typeof onButtonClick6 == "function") {
						button_6.addEventListener("click", onButtonClick6);
					}
					container.addChild(button_6, {
						"top": "50px",
						"left": "438px",
						"width": "100px",
						"height": "20px"
					});
					var textArea_1 = new cpr.controls.TextArea("signDataField");
					container.addChild(textArea_1, {
						"top": "165px",
						"left": "438px",
						"width": "309px",
						"height": "155px"
					});
				})(group_5);
				tabItem_5.content = group_5;
				return tabItem_5;
			})(tabFolder_1);
			tabFolder_1.addTabItem(tabItem_5);
			tabFolder_1.setSelectedTabItem(tabItem_1);
			container.addChild(tabFolder_1, {
				"top": "20px",
				"right": "20px",
				"bottom": "20px",
				"left": "20px"
			});
		}
	});
	app.title = "UDC-Others";
	cpr.core.Platform.INSTANCE.register(app);
})();
