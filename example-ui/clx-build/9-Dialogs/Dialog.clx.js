/*
 * App URI: 9-Dialogs/Dialog
 * Source Location: 9-Dialogs/Dialog.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("9-Dialogs/Dialog", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/*
			 * "저장" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick( /* cpr.events.CMouseEvent */ e) {
				if (app.getHost() == null) {
					close();
				} else {
					app.getHost().style.animateTo({
						"opacity": "0",
						"transform": "translateY(50px) rotateX(-90deg)"
					});
					app.getHost().addEventListenerOnce("animation-end", function() {
						close();
					});
				}
			
			}
			
			function close() {
				app.close({
					name: app.lookup("nameField").value,
					gender: app.lookup("genderField").value,
					age: app.lookup("ageField").value
				});
			}
			
			/*
			 * Body에서 property-change 이벤트 발생 시 호출.
			 * 앱의 속성이 변경될 때 발생하는 이벤트 입니다.
			 */
			function onBodyPropertyChange( /* cpr.events.CPropertyChangeEvent */ e) {
				if (e.property == "initData") {
					app.lookup("genderField").value = e.newValue["gender"];
					app.lookup("nameField").value = e.newValue["name"];
					app.lookup("ageField").value = e.newValue["age"];
				}
			}
			
			/*
			 * "취소" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick2( /* cpr.events.CMouseEvent */ e) {
				if (app.getHost() == null) {
					app.close(null);
				} else {
					app.getHost().style.animateTo({
						"transform": "translateY(-200px)",
						"opacity": "0"
					});
					app.getHost().addEventListenerOnce("animation-end", function(e) {
						app.close(null);
					});
				}
			}
			// End - User Script
			
			// Header
			app.declareAppProperty("initData", null);
			
			app.supportMedia("all", "new-screen");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container();
			// Layout
			var formLayout_1 = new cpr.controls.layouts.FormLayout();
			formLayout_1.topMargin = "20";
			formLayout_1.rightMargin = "20";
			formLayout_1.bottomMargin = "20";
			formLayout_1.leftMargin = "20";
			formLayout_1.setColumns(["100px", "1fr"]);
			formLayout_1.setRows(["25px", "25px", "25px", "1fr", "25px"]);
			group_1.setLayout(formLayout_1);
			(function(container){
				var output_1 = new cpr.controls.Output();
				output_1.value = "이름";
				output_1.style.css({
					"text-align" : "right"
				});
				container.addChild(output_1, {
					"colIndex": 0,
					"rowIndex": 0
				});
				var output_2 = new cpr.controls.Output();
				output_2.value = "성별";
				output_2.style.css({
					"text-align" : "right"
				});
				container.addChild(output_2, {
					"colIndex": 0,
					"rowIndex": 1
				});
				var inputBox_1 = new cpr.controls.InputBox("nameField");
				container.addChild(inputBox_1, {
					"colIndex": 1,
					"rowIndex": 0
				});
				var radioButton_1 = new cpr.controls.RadioButton("genderField");
				(function(radioButton_1){
					radioButton_1.addItem(new cpr.controls.Item("남", "male"));
					radioButton_1.addItem(new cpr.controls.Item("여", "female"));
				})(radioButton_1);
				container.addChild(radioButton_1, {
					"colIndex": 1,
					"rowIndex": 1
				});
				var group_2 = new cpr.controls.Container();
				// Layout
				var formLayout_2 = new cpr.controls.layouts.FormLayout();
				formLayout_2.setColumns(["1fr", "1fr"]);
				formLayout_2.setRows(["1fr"]);
				group_2.setLayout(formLayout_2);
				(function(container){
					var button_1 = new cpr.controls.Button();
					button_1.value = "저장";
					if(typeof onButtonClick == "function") {
						button_1.addEventListener("click", onButtonClick);
					}
					container.addChild(button_1, {
						"colIndex": 1,
						"rowIndex": 0
					});
					var button_2 = new cpr.controls.Button();
					button_2.value = "취소";
					if(typeof onButtonClick2 == "function") {
						button_2.addEventListener("click", onButtonClick2);
					}
					container.addChild(button_2, {
						"colIndex": 0,
						"rowIndex": 0
					});
				})(group_2);
				container.addChild(group_2, {
					"colIndex": 1,
					"rowIndex": 4,
					"horizontalAlign": "right",
					"width": 204
				});
				var output_3 = new cpr.controls.Output();
				output_3.value = "나이";
				output_3.style.css({
					"text-align" : "right"
				});
				container.addChild(output_3, {
					"colIndex": 0,
					"rowIndex": 2
				});
				var numberEditor_1 = new cpr.controls.NumberEditor("ageField");
				container.addChild(numberEditor_1, {
					"colIndex": 1,
					"rowIndex": 2
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "0px",
				"right": "0px",
				"bottom": "0px",
				"left": "0px"
			});
			if(typeof onBodyPropertyChange == "function"){
				app.addEventListener("property-change", onBodyPropertyChange);
			}
		}
	});
	app.title = "편집";
	cpr.core.Platform.INSTANCE.register(app);
})();
