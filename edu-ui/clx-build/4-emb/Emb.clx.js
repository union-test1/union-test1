/*
 * App URI: 4-emb/Emb
 * Source Location: 4-emb/Emb.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("4-emb/Emb", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/*알림 메시지를 위한 설정*/
			cpr.core.NotificationCenter.INSTANCE.subscribe("app-msg", this, function(msg) {
				var notifier = app.lookup("noti");
				if (msg.success == true) {
					notifier.success(msg.msg);
				} else if (msg.info == true) {
					notifier.info(msg.msg);
				} else if (msg.warning == true) {
					notifier.warning(msg.msg);
				} else if (msg.danger == true) {
					notifier.danger(msg.msg);
				} else {
					notifier.info(msg);
				}
			});
			
			/**
			 * 버튼을 선택할 때 화면 전환
			 * @param selectedButton 선택한 버튼 컨트롤
			 */
			function changePage(selectedButton){
				var emb = app.lookup("emb");
				/** @type cpr.controls.Container */
				var grpButtons = app.lookup("grpButtons");
				var buttons = grpButtons.getChildren();
				var url = selectedButton.userattr("src");
				
				emb.app = null;
				cpr.core.App.load(url, function(/* cpr.core.App*/ loadedApp){
					if(!loadedApp){
						return;
					}
					emb.app = loadedApp;
					emb.redraw();
					
					for(var i = 0; i < buttons.length; i++){
						if(selectedButton == buttons[i]){
							buttons[i].style.css("backgroundColor","SkyBlue");
						}else{
							buttons[i].style.removeStyle("backgroundColor");
						}
					}
				});
			}
			
			
			/*
			 * Body에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(/* cpr.events.CEvent */ e){
				var emb = app.lookup("emb");
				emb.initValue = {
						a: true,
						b: "value1",
						c: "value3",
						d: "20180101",
						e: "e"
				};
			}
			
			
			/*
			 * "Grid" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnGridClick(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btnGrid = e.control;
				changePage(btnGrid);
			}
			
			
			/*
			 * "Practice" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnPracticeClick(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btnPractice = e.control;
				changePage(btnPractice);
			}
			
			
			/*
			 * 임베디드 앱에서 load 이벤트 발생 시 호출.
			 * 임베디드 앱이 준비되고 그려진 후에 디스패치 되는 이벤트.
			 */
			function onEmbLoad(/* cpr.events.CEvent */ e){
				/** 
				 * @type cpr.controls.EmbeddedApp
				 */
				var emb = e.control;
				//임베디드 앱이 로드될 때 로드된 화면의 app에서 callAppTest라는 함수를 찾아 호출
				//즉, 자식의 함수를 호출
				var embAppIns = emb.getEmbeddedAppInstance();
				if(embAppIns.hasAppMethod("callAppTest")){
					embAppIns.callAppMethod("callAppTest");
				}
			}
			
			/**
			 * 자식 쪽에서 호출 가능한 함수
			 * Pracitce.clx 에서 Button을 누를 때 사용될 메소드
			 */
			/*자식 쪽에서 호출 가능한 함수*/
			exports.callAppTest = function(){
				alert("parents'_callAppMethod");
			}
			// End - User Script
			
			// Header
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grpButtons");
			// Layout
			var formLayout_1 = new cpr.controls.layouts.FormLayout();
			formLayout_1.setColumns(["1fr", "150px", "150px"]);
			formLayout_1.setRows(["1fr"]);
			group_1.setLayout(formLayout_1);
			(function(container){
				var button_1 = new cpr.controls.Button("btnGrid");
				button_1.value = "Grid";
				button_1.userAttr({"src": "1-tutorial/Grid"});
				button_1.style.css({
					"background-image" : "none"
				});
				if(typeof onBtnGridClick == "function") {
					button_1.addEventListener("click", onBtnGridClick);
				}
				container.addChild(button_1, {
					"colIndex": 1,
					"rowIndex": 0
				});
				var button_2 = new cpr.controls.Button("btnPractice");
				button_2.value = "Practice";
				button_2.userAttr({"src": "3-practice/Practice"});
				button_2.style.css({
					"background-image" : "none"
				});
				if(typeof onBtnPracticeClick == "function") {
					button_2.addEventListener("click", onBtnPracticeClick);
				}
				container.addChild(button_2, {
					"colIndex": 2,
					"rowIndex": 0
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "20px",
				"right": "20px",
				"left": "20px",
				"height": "100px"
			});
			
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("emb");
			embeddedApp_1.style.css({
				"border-right-style" : "solid",
				"border-top-width" : "1px",
				"border-bottom-color" : "#dddddd",
				"border-left-style" : "solid",
				"border-right-width" : "1px",
				"border-bottom-width" : "1px",
				"border-left-color" : "#dddddd",
				"border-top-color" : "#dddddd",
				"border-bottom-style" : "solid",
				"border-right-color" : "#dddddd",
				"border-left-width" : "1px",
				"border-top-style" : "solid"
			});
			if(typeof onEmbLoad == "function") {
				embeddedApp_1.addEventListener("load", onEmbLoad);
			}
			container.addChild(embeddedApp_1, {
				"top": "130px",
				"right": "20px",
				"bottom": "20px",
				"left": "20px"
			});
			
			var notifier_1 = new cpr.controls.Notifier("noti");
			notifier_1.maxNotifyCount = 1;
			notifier_1.animation = "bounce";
			notifier_1.successAnimation = "bounce";
			notifier_1.infoAnimation = "bounce";
			notifier_1.warningAnimation = "bounce";
			notifier_1.dangerAnimation = "bounce";
			container.addChild(notifier_1, {
				"width": "500px",
				"height": "50px",
				"left": "calc(50% - 250px)",
				"top": "calc(50% - 25px)"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "Emb";
	cpr.core.Platform.INSTANCE.register(app);
})();
