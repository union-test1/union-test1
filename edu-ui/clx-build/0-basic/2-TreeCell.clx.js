/*
 * App URI: 0-basic/2-TreeCell
 * Source Location: 0-basic/2-TreeCell.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("0-basic/2-TreeCell", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * TreeCell.js
			 * Created at 2018. 10. 8. 오전 10:18:08.
			 *
			 * @author ryu
			 ************************************************/;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("ds1");
			dataSet_1.parseData({
				"columns": [
					{"name": "file"},
					{
						"name": "size",
						"dataType": "string"
					},
					{"name": "level"}
				],
				"rows": [
					{"file": "file1", "size": "1MB", "level": "1"},
					{"file": "file2", "size": "2GB", "level": "2"},
					{"file": "file3", "size": "3MB", "level": "3"},
					{"file": "file4", "size": "4MB", "level": "1"},
					{"file": "file5", "size": "5KB", "level": "2"},
					{"file": "file6", "size": "6GB", "level": "1"},
					{"file": "file7", "size": "7KB", "level": "2"},
					{"file": "file8", "size": "8MB", "level": "3"},
					{"file": "file9", "size": "9MB", "level": "4"},
					{"file": "file10", "size": "10KB", "level": "1"}
				]
			});
			app.register(dataSet_1);
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var grid_1 = new cpr.controls.Grid("grd1");
			grid_1.readOnly = true;
			grid_1.init({
				"dataSet": app.lookup("ds1"),
				"columnMovable": true,
				"columnResizable": true,
				"collapsible": true,
				"columns": [
					{"width": "100px"},
					{"width": "100px"}
				],
				"header": {
					"rows": [{"height": "24px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.targetColumnName = "file";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "file";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.targetColumnName = "size";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "size";
							}
						}
					]
				},
				"detail": {
					"rows": [{"height": "24px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.columnName = "file";
								cell.control = (function(){
									var treeCell_1 = new cpr.controls.gridpart.renderer.TreeCell();
									treeCell_1.bind("level").toDataColumn("level");
									treeCell_1.bind("value").toDataColumn("file");
									return treeCell_1;
								})();
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.columnName = "size";
								cell.control = (function(){
									var inputBox_1 = new cpr.controls.InputBox();
									inputBox_1.bind("value").toDataColumn("size");
									return inputBox_1;
								})();
							}
						}
					]
				}
			});
			container.addChild(grid_1, {
				"top": "20px",
				"right": "20px",
				"bottom": "20px",
				"left": "20px"
			});
		}
	});
	app.title = "2-TreeCell";
	cpr.core.Platform.INSTANCE.register(app);
})();
