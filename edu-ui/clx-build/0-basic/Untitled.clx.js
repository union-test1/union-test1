/*
 * App URI: 0-basic/Untitled
 * Source Location: 0-basic/Untitled.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("0-basic/Untitled", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * Untitled.js
			 * Created at 2019. 5. 22. 오후 3:20:18.
			 *
			 * @author joymrk
			 ************************************************/
			
			
			/*
			 * Body에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(/* cpr.events.CEvent */ e){
				
			}
			
			
			/*
			 * "Button" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick(/* cpr.events.CMouseEvent */ e){
				/*
				var dm = app.lookup("dm1");
				dm.setValue("column1", 5);
				console.log(dm.getDatas());
				dm.reset();
				console.log(dm.getDatas());
				dm.clear();
				console.log(dm.getDatas());
				*/
				
				var a = " 1 2 3 ";
				var str = a.replace(/\s/g, "");
				console.log(str);
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("ds1");
			dataSet_1.parseData({
				"columns": [
					{"name": "column1"},
					{"name": "column2"}
				],
				"rows": [
					{"column1": "column11", "column2": "column21"},
					{"column1": "column12", "column2": "column22"},
					{"column1": "column13", "column2": "column23"}
				]
			});
			app.register(dataSet_1);
			var dataMap_1 = new cpr.data.DataMap("dm1");
			dataMap_1.parseData({
				"columns" : [{
					"name": "column1",
					"dataType": "number",
					"defaultValue": "-1"
				}]
			});
			app.register(dataMap_1);
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container();
			// Layout
			var formLayout_1 = new cpr.controls.layouts.FormLayout();
			formLayout_1.setColumns(["300px", "1fr", "150px"]);
			formLayout_1.setRows(["30px", "30px", "30px", "30px", "30px", "150px"]);
			group_1.setLayout(formLayout_1);
			(function(container){
				var output_1 = new cpr.controls.Output();
				output_1.value = "근태현황 알람 옵션";
				container.addChild(output_1, {
					"colIndex": 0,
					"rowIndex": 0
				});
				var output_2 = new cpr.controls.Output();
				output_2.value = "경고 알람 대상자 설정";
				container.addChild(output_2, {
					"colIndex": 0,
					"rowIndex": 1
				});
				var output_3 = new cpr.controls.Output();
				output_3.value = "알람 팝업";
				container.addChild(output_3, {
					"colIndex": 0,
					"rowIndex": 2
				});
				var output_4 = new cpr.controls.Output();
				output_4.value = "알람 메일 전송";
				container.addChild(output_4, {
					"colIndex": 0,
					"rowIndex": 3
				});
				var output_5 = new cpr.controls.Output();
				output_5.value = "전체 관리자 메일 주소 등록";
				container.addChild(output_5, {
					"colIndex": 0,
					"rowIndex": 4
				});
				var output_6 = new cpr.controls.Output();
				output_6.value = "시간 이상 근무자";
				container.addChild(output_6, {
					"colIndex": 2,
					"rowIndex": 1
				});
				var inputBox_1 = new cpr.controls.InputBox("ipb1");
				container.addChild(inputBox_1, {
					"colIndex": 1,
					"rowIndex": 1
				});
				var comboBox_1 = new cpr.controls.ComboBox("cmb1");
				comboBox_1.value = "1";
				comboBox_1.style.css({
					"font-size" : "14px",
					"text-align" : "center"
				});
				(function(comboBox_1){
					comboBox_1.addItem(new cpr.controls.Item("OFF", "0"));
					comboBox_1.addItem(new cpr.controls.Item("ON", "1"));
				})(comboBox_1);
				container.addChild(comboBox_1, {
					"colIndex": 1,
					"rowIndex": 3
				});
				var comboBox_2 = new cpr.controls.ComboBox("cmb2");
				comboBox_2.value = "1";
				comboBox_2.style.css({
					"font-size" : "14px",
					"text-align" : "center"
				});
				(function(comboBox_2){
					comboBox_2.addItem(new cpr.controls.Item("OFF", "0"));
					comboBox_2.addItem(new cpr.controls.Item("ON", "1"));
				})(comboBox_2);
				container.addChild(comboBox_2, {
					"colIndex": 1,
					"rowIndex": 2
				});
				var button_1 = new cpr.controls.Button();
				button_1.value = "상세설정";
				container.addChild(button_1, {
					"colIndex": 2,
					"rowIndex": 2
				});
				var button_2 = new cpr.controls.Button();
				button_2.value = "상세설정";
				container.addChild(button_2, {
					"colIndex": 2,
					"rowIndex": 3
				});
				var grid_1 = new cpr.controls.Grid("grd1");
				grid_1.init({
					"columns": [
						{"width": "100px"},
						{"width": "100px"},
						{"width": "100px"}
					],
					"header": {
						"rows": [{"height": "24px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.text = "E-mail";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.text = "Name";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.text = "직급";
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "24px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
								}
							}
						]
					}
				});
				container.addChild(grid_1, {
					"colIndex": 0,
					"rowIndex": 5,
					"colSpan": 2,
					"rowSpan": 1
				});
				var group_2 = new cpr.controls.Container();
				// Layout
				var formLayout_2 = new cpr.controls.layouts.FormLayout();
				formLayout_2.setColumns(["1fr"]);
				formLayout_2.setRows(["30px", "30px"]);
				group_2.setLayout(formLayout_2);
				(function(container){
					var button_3 = new cpr.controls.Button();
					button_3.value = "추가";
					container.addChild(button_3, {
						"colIndex": 0,
						"rowIndex": 0
					});
					var button_4 = new cpr.controls.Button();
					button_4.value = "삭제";
					container.addChild(button_4, {
						"colIndex": 0,
						"rowIndex": 1
					});
				})(group_2);
				container.addChild(group_2, {
					"colIndex": 2,
					"rowIndex": 5
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "0px",
				"right": "0px",
				"bottom": "0px",
				"left": "0px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "Untitled";
	cpr.core.Platform.INSTANCE.register(app);
})();
