/*
 * App URI: tnaSample/resilientTNATimeTypeUISample
 * Source Location: tnaSample/resilientTNATimeTypeUISample.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("tnaSample/resilientTNATimeTypeUISample", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * resilientTNATimeTypeUISample.js
			 * Created at 2019. 8. 19. 오전 10:00:32.
			 *
			 * @author joymrk
			 ************************************************/;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsWorkTypeTinyList");
			dataSet_1.parseData({
				"columns": [
					{
						"name": "Code",
						"info": ""
					},
					{"name": "Name"}
				],
				"rows": [
					{"Code": "0001", "Name": "고정근무형태"},
					{"Code": "0002", "Name": "선택근무제"},
					{"Code": "0003", "Name": "탄력근무제"},
					{"Code": "0004", "Name": "재택근무제"}
				]
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsWorkScheduleList");
			dataSet_2.parseData({
				"columns": [
					{
						"name": "workDate",
						"dataType": "string"
					},
					{
						"name": "workDay",
						"dataType": "string"
					},
					{
						"name": "workShift",
						"dataType": "string"
					}
				],
				"rows": [
					{"workDate": "2019-08-19", "workDay": "월", "workShift": "**: 미지정"},
					{"workDate": "2019-08-20", "workDay": "화", "workShift": "**: 미지정"},
					{"workDate": "2019-08-21", "workDay": "수", "workShift": "**: 미지정"},
					{"workDate": "2019-08-22", "workDay": "목", "workShift": "**: 미지정"},
					{"workDate": "2019-08-23", "workDay": "금", "workShift": "**: 미지정"}
				]
			});
			app.register(dataSet_2);
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container();
			group_1.style.css({
				"padding-top" : "5px",
				"padding-left" : "5px",
				"padding-bottom" : "5px",
				"padding-right" : "5px"
			});
			// Layout
			var formLayout_1 = new cpr.controls.layouts.FormLayout();
			formLayout_1.setColumns(["1fr"]);
			formLayout_1.setRows(["30px", "1fr", "30px"]);
			group_1.setLayout(formLayout_1);
			(function(container){
				var group_2 = new cpr.controls.Container();
				// Layout
				var formLayout_2 = new cpr.controls.layouts.FormLayout();
				formLayout_2.setColumns(["190px", "1fr"]);
				formLayout_2.setRows(["70px", "100px", "70px", "1fr"]);
				group_2.setLayout(formLayout_2);
				(function(container){
					var group_3 = new cpr.controls.Container();
					// Layout
					var formLayout_3 = new cpr.controls.layouts.FormLayout();
					formLayout_3.setColumns(["1fr"]);
					formLayout_3.setRows(["30px", "30px"]);
					group_3.setLayout(formLayout_3);
					(function(container){
						var output_1 = new cpr.controls.Output();
						output_1.value = "입력 정보";
						output_1.style.css({
							"background-color" : "#e8e8e8",
							"background-image" : "none"
						});
						container.addChild(output_1, {
							"colIndex": 0,
							"rowIndex": 0
						});
						var group_4 = new cpr.controls.Container();
						// Layout
						var formLayout_4 = new cpr.controls.layouts.FormLayout();
						formLayout_4.setColumns(["100px", "1fr", "100px", "1fr"]);
						formLayout_4.setRows(["1fr"]);
						group_4.setLayout(formLayout_4);
						(function(container){
							var output_2 = new cpr.controls.Output();
							output_2.value = "코드";
							output_2.style.css({
								"background-color" : "#e8e8e8",
								"background-image" : "none",
								"text-align" : "center"
							});
							container.addChild(output_2, {
								"colIndex": 0,
								"rowIndex": 0
							});
							var output_3 = new cpr.controls.Output();
							output_3.value = "이름";
							output_3.style.css({
								"background-color" : "#e8e8e8",
								"background-image" : "none",
								"text-align" : "center"
							});
							container.addChild(output_3, {
								"colIndex": 2,
								"rowIndex": 0
							});
							var inputBox_1 = new cpr.controls.InputBox("ipb1");
							container.addChild(inputBox_1, {
								"colIndex": 1,
								"rowIndex": 0
							});
							var inputBox_2 = new cpr.controls.InputBox("ipb2");
							container.addChild(inputBox_2, {
								"colIndex": 3,
								"rowIndex": 0
							});
						})(group_4);
						container.addChild(group_4, {
							"colIndex": 0,
							"rowIndex": 1
						});
					})(group_3);
					container.addChild(group_3, {
						"colIndex": 1,
						"rowIndex": 0
					});
					var group_5 = new cpr.controls.Container();
					// Layout
					var formLayout_5 = new cpr.controls.layouts.FormLayout();
					formLayout_5.setColumns(["1fr"]);
					formLayout_5.setRows(["1fr"]);
					group_5.setLayout(formLayout_5);
					(function(container){
						var grid_1 = new cpr.controls.Grid("grd1");
						grid_1.readOnly = true;
						grid_1.init({
							"dataSet": app.lookup("dsWorkTypeTinyList"),
							"columnMovable": false,
							"columnResizable": false,
							"columns": [
								{"width": "80px"},
								{"width": "100px"}
							],
							"header": {
								"rows": [{"height": "24px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.targetColumnName = "Code";
											cell.filterable = false;
											cell.sortable = false;
											cell.text = "Code";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.targetColumnName = "Name";
											cell.filterable = false;
											cell.sortable = false;
											cell.text = "Name";
										}
									}
								]
							},
							"detail": {
								"rows": [{"height": "24px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.columnName = "Code";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.columnName = "Name";
										}
									}
								]
							}
						});
						container.addChild(grid_1, {
							"colIndex": 0,
							"rowIndex": 0
						});
					})(group_5);
					container.addChild(group_5, {
						"colIndex": 0,
						"rowIndex": 0,
						"colSpan": 1,
						"rowSpan": 4
					});
					var group_6 = new cpr.controls.Container();
					// Layout
					var formLayout_6 = new cpr.controls.layouts.FormLayout();
					formLayout_6.setColumns(["1fr"]);
					formLayout_6.setRows(["30px", "30px", "30px"]);
					group_6.setLayout(formLayout_6);
					(function(container){
						var group_7 = new cpr.controls.Container();
						// Layout
						var formLayout_7 = new cpr.controls.layouts.FormLayout();
						formLayout_7.setColumns(["150px", "1fr"]);
						formLayout_7.setRows(["1fr"]);
						group_7.setLayout(formLayout_7);
						(function(container){
							var output_4 = new cpr.controls.Output();
							output_4.value = "적용 공휴일 코드";
							output_4.style.css({
								"background-color" : "#e8e8e8",
								"background-image" : "none",
								"text-align" : "center"
							});
							container.addChild(output_4, {
								"colIndex": 0,
								"rowIndex": 0
							});
							var comboBox_1 = new cpr.controls.ComboBox("cmb1");
							comboBox_1.value = "0";
							comboBox_1.style.css({
								"text-align" : "center"
							});
							(function(comboBox_1){
								comboBox_1.addItem(new cpr.controls.Item("**: 미지정", "0"));
							})(comboBox_1);
							container.addChild(comboBox_1, {
								"colIndex": 1,
								"rowIndex": 0,
								"horizontalAlign": "center",
								"width": 150
							});
						})(group_7);
						container.addChild(group_7, {
							"colIndex": 0,
							"rowIndex": 1
						});
						var group_8 = new cpr.controls.Container();
						// Layout
						var formLayout_8 = new cpr.controls.layouts.FormLayout();
						formLayout_8.setColumns(["150px", "1fr"]);
						formLayout_8.setRows(["1fr"]);
						group_8.setLayout(formLayout_8);
						(function(container){
							var output_5 = new cpr.controls.Output();
							output_5.value = "적용 공휴일 근무";
							output_5.style.css({
								"background-color" : "#e8e8e8",
								"background-image" : "none",
								"text-align" : "center"
							});
							container.addChild(output_5, {
								"colIndex": 0,
								"rowIndex": 0
							});
							var comboBox_2 = new cpr.controls.ComboBox("cmb2");
							comboBox_2.value = "0";
							comboBox_2.style.css({
								"text-align" : "center"
							});
							(function(comboBox_2){
								comboBox_2.addItem(new cpr.controls.Item("**: 미지정", "0"));
							})(comboBox_2);
							container.addChild(comboBox_2, {
								"colIndex": 1,
								"rowIndex": 0,
								"horizontalAlign": "center",
								"width": 150
							});
						})(group_8);
						container.addChild(group_8, {
							"colIndex": 0,
							"rowIndex": 2
						});
						var output_6 = new cpr.controls.Output();
						output_6.value = "적용 공휴일 코드";
						output_6.style.css({
							"background-color" : "#e8e8e8",
							"background-image" : "none"
						});
						container.addChild(output_6, {
							"colIndex": 0,
							"rowIndex": 0
						});
					})(group_6);
					container.addChild(group_6, {
						"colIndex": 1,
						"rowIndex": 1
					});
					var group_9 = new cpr.controls.Container();
					// Layout
					var formLayout_9 = new cpr.controls.layouts.FormLayout();
					formLayout_9.setColumns(["1fr"]);
					formLayout_9.setRows(["30px", "30px"]);
					group_9.setLayout(formLayout_9);
					(function(container){
						var output_7 = new cpr.controls.Output();
						output_7.value = "근무일정 세팅";
						output_7.style.css({
							"background-color" : "#e8e8e8",
							"background-image" : "none"
						});
						container.addChild(output_7, {
							"colIndex": 0,
							"rowIndex": 0
						});
						var group_10 = new cpr.controls.Container();
						// Layout
						var formLayout_10 = new cpr.controls.layouts.FormLayout();
						formLayout_10.setColumns(["100px", "150px", "1fr", "100px", "70px", "50px"]);
						formLayout_10.setRows(["1fr"]);
						group_10.setLayout(formLayout_10);
						(function(container){
							var output_8 = new cpr.controls.Output();
							output_8.value = "시작일";
							output_8.style.css({
								"background-color" : "#e8e8e8",
								"background-image" : "none",
								"text-align" : "center"
							});
							container.addChild(output_8, {
								"colIndex": 0,
								"rowIndex": 0
							});
							var output_9 = new cpr.controls.Output();
							output_9.value = "설정 일수";
							output_9.style.css({
								"background-color" : "#e8e8e8",
								"background-image" : "none",
								"text-align" : "center"
							});
							container.addChild(output_9, {
								"colIndex": 3,
								"rowIndex": 0
							});
							var comboBox_3 = new cpr.controls.ComboBox("cmb3");
							comboBox_3.value = "1";
							comboBox_3.style.css({
								"text-align" : "center"
							});
							(function(comboBox_3){
								comboBox_3.addItem(new cpr.controls.Item("1", "1"));
							})(comboBox_3);
							container.addChild(comboBox_3, {
								"colIndex": 4,
								"rowIndex": 0
							});
							var output_10 = new cpr.controls.Output();
							output_10.value = "일";
							container.addChild(output_10, {
								"colIndex": 5,
								"rowIndex": 0
							});
							var dateInput_1 = new cpr.controls.DateInput("dti1");
							dateInput_1.value = "20190819";
							dateInput_1.style.css({
								"text-align" : "center"
							});
							container.addChild(dateInput_1, {
								"colIndex": 1,
								"rowIndex": 0
							});
						})(group_10);
						container.addChild(group_10, {
							"colIndex": 0,
							"rowIndex": 1
						});
					})(group_9);
					container.addChild(group_9, {
						"colIndex": 1,
						"rowIndex": 2
					});
					var grid_2 = new cpr.controls.Grid("grd2");
					grid_2.readOnly = true;
					grid_2.init({
						"dataSet": app.lookup("dsWorkScheduleList"),
						"columnMovable": false,
						"columnResizable": false,
						"columns": [
							{"width": "100px"},
							{"width": "50px"},
							{"width": "100px"}
						],
						"header": {
							"rows": [{"height": "24px"}],
							"cells": [
								{
									"constraint": {"rowIndex": 0, "colIndex": 0},
									"configurator": function(cell){
										cell.targetColumnName = "workDate";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "workDate";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 1},
									"configurator": function(cell){
										cell.targetColumnName = "workDay";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "workDay";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 2},
									"configurator": function(cell){
										cell.targetColumnName = "workShift";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "workShift";
									}
								}
							]
						},
						"detail": {
							"rows": [{"height": "24px"}],
							"cells": [
								{
									"constraint": {"rowIndex": 0, "colIndex": 0},
									"configurator": function(cell){
										cell.columnName = "workDate";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 1},
									"configurator": function(cell){
										cell.columnName = "workDay";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 2},
									"configurator": function(cell){
										cell.columnName = "workShift";
									}
								}
							]
						}
					});
					container.addChild(grid_2, {
						"colIndex": 1,
						"rowIndex": 3
					});
				})(group_2);
				container.addChild(group_2, {
					"colIndex": 0,
					"rowIndex": 1
				});
				var group_11 = new cpr.controls.Container();
				// Layout
				var formLayout_11 = new cpr.controls.layouts.FormLayout();
				formLayout_11.setColumns(["1fr", "1fr", "1fr", "1fr", "1fr"]);
				formLayout_11.setRows(["1fr"]);
				group_11.setLayout(formLayout_11);
				(function(container){
					var button_1 = new cpr.controls.Button();
					button_1.value = "저장";
					container.addChild(button_1, {
						"colIndex": 2,
						"rowIndex": 0
					});
					var button_2 = new cpr.controls.Button();
					button_2.value = "삭제";
					container.addChild(button_2, {
						"colIndex": 3,
						"rowIndex": 0
					});
					var button_3 = new cpr.controls.Button();
					button_3.value = "닫기";
					container.addChild(button_3, {
						"colIndex": 4,
						"rowIndex": 0
					});
				})(group_11);
				container.addChild(group_11, {
					"colIndex": 0,
					"rowIndex": 2
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "1px",
				"right": "1px",
				"bottom": "1px",
				"left": "1px"
			});
		}
	});
	app.title = "resilientTNATimeTypeUISample";
	cpr.core.Platform.INSTANCE.register(app);
})();
