/*
 * App URI: 3-practice/Practice
 * Source Location: 3-practice/Practice.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("3-practice/Practice", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/*공통 모듈을 사용하는 방법*/
			// global 사용
			var util = createUtil(app);
			
			//exports 사용
			//var util = cpr.core.Module.require("module/common2");
			
			
			/*
			 * Body에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(/* cpr.events.CEvent */ e){
				//임베디드 앱으로 화면이 호출될 경우 a, b, c, d, e에 대한 initValue 값을 설정
				//즉, 임베디드 앱으로 호출되지 않으면 값이 설정되지 않는다.
				var initValue = null;
				var hostAppIns = app.getHostAppInstance();
				
				if(hostAppIns){
					initValue = app.getHostProperty("initValue");
					if(initValue != null){
						app.lookup("cbx1").value = initValue["a"];
						app.lookup("cmb1").value = initValue["b"];
						app.lookup("rdb1").value = initValue["c"];
						app.lookup("dti1").value = initValue["d"];
						app.lookup("ipb5").value = initValue["e"];
					}
				}
			}
			
			
			/*
			 * 사용자 정의 컨트롤에서 search 이벤트 발생 시 호출.
			 */
			function onSearchButtonSearch(/* cpr.events.CUIEvent */ e){
				/** 
				 * @type udc.SearchButton
				 */
				var searchButton = e.control;
				//팝업을 호출 해 initValue 값에 해당하는 값을 조회
				var empName = searchButton.value;
				
				var appId = "2-dialog/SearchPop"
				util.openModal(appId, 800, 500, function(e){
					var dialog = e.control;
					var selectedData = dialog.returnValue;
					if(selectedData == null){
						return;
					}
					
					// 선택된 행이 있을 경우 값을 세팅
					searchButton.value = selectedData["NAME"];
					app.lookup("ipb1").value = selectedData["DEPT"];
					app.lookup("ipb2").value = selectedData["SALARY"];
					app.lookup("ipb3").value = selectedData["BONUS"];
					app.lookup("ipb4").value = selectedData["TOTAL"];
				}, {
					empName : empName
				});
			}
			
			
			/*
			 * "Message" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnMsgClick(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btnMsg = e.control;
				//임베디드 앱으로 해당 화면을 호출한 app에서 callAppTest 라는 함수를 찾아 호출
				//즉, 부모의 함수를 호출
				var hostAppIns = app.getHostAppInstance();
				if(hostAppIns){
					if(hostAppIns.callAppMethod("callAppTest")){
						hostAppIns.callAppMethod("callAppTest");
					}
				}
			}
			
			/**
			 * 부모 쪽에서 호출 가능한 함수
			 * Emb.clx 에서 임베디드 앱이 로드될 때 해당 메소드를 호출합니다.
			 */
			exports.callAppTest = function(){
				alert("child's_callAppMethod");
			};
			// End - User Script
			
			// Header
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container();
			// Layout
			var formLayout_1 = new cpr.controls.layouts.FormLayout();
			formLayout_1.userResizingMode = "none";
			formLayout_1.setColumns(["100px", "1fr", "100px", "1fr"]);
			formLayout_1.setUseColumnShade(0, true);
			formLayout_1.setUseColumnShade(2, true);
			formLayout_1.setRows(["25px", "25px", "25px", "25px", "25px"]);
			group_1.setLayout(formLayout_1);
			(function(container){
				var output_1 = new cpr.controls.Output();
				output_1.value = "이름";
				container.addChild(output_1, {
					"colIndex": 0,
					"rowIndex": 0
				});
				var output_2 = new cpr.controls.Output();
				output_2.value = "부서";
				container.addChild(output_2, {
					"colIndex": 0,
					"rowIndex": 1
				});
				var output_3 = new cpr.controls.Output();
				output_3.value = "급여";
				container.addChild(output_3, {
					"colIndex": 0,
					"rowIndex": 2
				});
				var output_4 = new cpr.controls.Output();
				output_4.value = "성과금";
				container.addChild(output_4, {
					"colIndex": 0,
					"rowIndex": 3
				});
				var output_5 = new cpr.controls.Output();
				output_5.value = "합계";
				container.addChild(output_5, {
					"colIndex": 0,
					"rowIndex": 4
				});
				var output_6 = new cpr.controls.Output();
				output_6.value = "a";
				container.addChild(output_6, {
					"colIndex": 2,
					"rowIndex": 0
				});
				var output_7 = new cpr.controls.Output();
				output_7.value = "b";
				container.addChild(output_7, {
					"colIndex": 2,
					"rowIndex": 1
				});
				var output_8 = new cpr.controls.Output();
				output_8.value = "c";
				container.addChild(output_8, {
					"colIndex": 2,
					"rowIndex": 2
				});
				var output_9 = new cpr.controls.Output();
				output_9.value = "d";
				container.addChild(output_9, {
					"colIndex": 2,
					"rowIndex": 3
				});
				var output_10 = new cpr.controls.Output();
				output_10.value = "e";
				container.addChild(output_10, {
					"colIndex": 2,
					"rowIndex": 4
				});
				var userDefinedControl_1 = new udc.SearchButton();
				userDefinedControl_1.placeholder = "이름을 입력하세요.";
				if(typeof onSearchButtonSearch == "function") {
					userDefinedControl_1.addEventListener("search", onSearchButtonSearch);
				}
				container.addChild(userDefinedControl_1, {
					"colIndex": 1,
					"rowIndex": 0
				});
				var inputBox_1 = new cpr.controls.InputBox("ipb1");
				inputBox_1.readOnly = true;
				container.addChild(inputBox_1, {
					"colIndex": 1,
					"rowIndex": 1
				});
				var inputBox_2 = new cpr.controls.InputBox("ipb2");
				inputBox_2.readOnly = true;
				container.addChild(inputBox_2, {
					"colIndex": 1,
					"rowIndex": 2
				});
				var inputBox_3 = new cpr.controls.InputBox("ipb3");
				inputBox_3.readOnly = true;
				container.addChild(inputBox_3, {
					"colIndex": 1,
					"rowIndex": 3
				});
				var inputBox_4 = new cpr.controls.InputBox("ipb4");
				inputBox_4.readOnly = true;
				container.addChild(inputBox_4, {
					"colIndex": 1,
					"rowIndex": 4
				});
				var inputBox_5 = new cpr.controls.InputBox("ipb5");
				container.addChild(inputBox_5, {
					"colIndex": 3,
					"rowIndex": 4
				});
				var dateInput_1 = new cpr.controls.DateInput("dti1");
				container.addChild(dateInput_1, {
					"colIndex": 3,
					"rowIndex": 3
				});
				var radioButton_1 = new cpr.controls.RadioButton("rdb1");
				(function(radioButton_1){
					radioButton_1.addItem(new cpr.controls.Item("label1", "value1"));
					radioButton_1.addItem(new cpr.controls.Item("label2", "value2"));
					radioButton_1.addItem(new cpr.controls.Item("label3", "value3"));
				})(radioButton_1);
				container.addChild(radioButton_1, {
					"colIndex": 3,
					"rowIndex": 2
				});
				var comboBox_1 = new cpr.controls.ComboBox("cmb1");
				(function(comboBox_1){
					comboBox_1.addItem(new cpr.controls.Item("label1", "value1"));
					comboBox_1.addItem(new cpr.controls.Item("label2", "value2"));
					comboBox_1.addItem(new cpr.controls.Item("label3", "value3"));
				})(comboBox_1);
				container.addChild(comboBox_1, {
					"colIndex": 3,
					"rowIndex": 1
				});
				var checkBox_1 = new cpr.controls.CheckBox("cbx1");
				checkBox_1.text = "Check";
				container.addChild(checkBox_1, {
					"colIndex": 3,
					"rowIndex": 0
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "20px",
				"right": "20px",
				"left": "20px",
				"height": "150px"
			});
			
			var button_1 = new cpr.controls.Button("btnMsg");
			button_1.value = "Message";
			if(typeof onBtnMsgClick == "function") {
				button_1.addEventListener("click", onBtnMsgClick);
			}
			container.addChild(button_1, {
				"top": "180px",
				"right": "20px",
				"width": "100px",
				"height": "25px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "Practice";
	cpr.core.Platform.INSTANCE.register(app);
})();
