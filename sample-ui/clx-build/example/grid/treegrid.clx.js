/*
 * App URI: example/grid/treegrid
 * Source Location: example/grid/treegrid.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("example/grid/treegrid", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			
			/*
			 * 그리드에서 context-value-change 이벤트 발생 시 호출.
			 * 바인드컨텍스트를 가지고 있는 컨트롤에서 바인드컨텍스트를 이용해 값이 변경된 후에 발생하는 이벤트.
			 */
			function onGrd1ContextValueChange(/* cpr.events.CValueChangeEvent */ e){
				/** 
				 * @type cpr.controls.Grid
				 */
				var grd1 = e.control;
				
				var updateColName = e.columnName;
				if(["weight", "svhc", "export_amt"].indexOf(updateColName) == -1) {
					return;
				}
				
				var rowIndex = e.context.rowIndex;
				var rowGroup = grd1.getGridRowGroup(rowIndex);
				
				if(rowGroup) {
					for(rowGroup = rowGroup.parent; rowGroup != null; rowGroup = rowGroup.parent) {
						// 합산을 구할 때 현재 RowGroup에 매핑된 GridRow의 값은 제외됩니다.
						var columnSumValue = rowGroup.getSum(updateColName);
			
						// RowGroup과 매핑된 GridRow 객체
						var row = rowGroup.target;
						row.setValue(updateColName, columnSumValue);
					}
				}
				grd1.redraw();
			}
			
			/*
			 * 그리드에서 cell-click 이벤트 발생 시 호출.
			 * Grid의 Cell 클릭시 발생하는 이벤트.
			 */
			function onGrd1CellClick(/* cpr.events.CGridEvent */ e){
				/** 
				 * @type cpr.controls.Grid
				 */
				var grd1 = e.control;
				
				var cellInfo = grd1.getCellInfo(e.cellIndex);
				var rowIndex = e.row.getIndex();
				var colName = cellInfo.columnName;
				var rowGroup = grd1.getGridRowGroup(rowIndex);
				
				// 트리셀 최하위 노드 존재 여부.
				console.log("최하위 노드 존재 여부 : "+e.row.isFolder());
				
				console.log(rowGroup.getSum(colName));
			}
			
			
			
			/*
			 * "클릭" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn1Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn1 = e.control;
				
				var treegrid_nbe = app.lookup("treegrid_nbe");
				var dstreeCount = app.lookup("dstree").getRowCount();
				if(treegrid_nbe.value == null){
					alert("입력해주세요.")
					return;
				}
				
				if(treegrid_nbe.value > dstreeCount){
					alert("데이터 수 보다 큰 수를 입력하셨습니다.");
					return;
				}
				
				var row = app.lookup("grd1").getRow(Number(treegrid_nbe.value));
				if(row.isFolder()){
					row.expanded = !row.expanded;
				}else{
					alert("하위노드가 존재하지 않습니다.");
				}
				
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dstree");
			dataSet_1.parseData({
				"columns": [
					{"name": "head"},
					{"name": "level"},
					{"name": "gubun"},
					{"name": "article"},
					{"name": "base"},
					{"name": "complice"},
					{
						"name": "weight",
						"dataType": "number"
					},
					{
						"name": "svhc",
						"dataType": "number"
					},
					{
						"name": "export_amt",
						"dataType": "number"
					}
				],
				"rows": [
					{"head": "1", "level": "1", "gubun": "gubun1", "article": "article1", "base": "base1", "complice": "complice1", "weight": "303", "svhc": "600", "export_amt": "30000"},
					{"head": "1-1", "level": "2", "gubun": "gubun1", "article": "article1", "base": "base2", "complice": "complice2", "weight": "303", "svhc": "600", "export_amt": "30000"},
					{"head": "1-1-1", "level": "3", "gubun": "gubun1", "article": "article1", "base": "base3", "complice": "complice3", "weight": "202", "svhc": "400", "export_amt": "20000"},
					{"head": "1-1-1-1", "level": "4", "gubun": "gubun1", "article": "article2", "base": "base4", "complice": "complice4", "weight": "101", "svhc": "200", "export_amt": "10000"},
					{"head": "1-1-1-2", "level": "4", "gubun": "gubun1", "article": "article2", "base": "base5", "complice": "complice5", "weight": "101", "svhc": "200", "export_amt": "10000"},
					{"head": "1-1-2", "level": "3", "gubun": "gubun1", "article": "article2", "base": "base6", "complice": "complice6", "weight": "101", "svhc": "200", "export_amt": "10000"},
					{"head": "2", "level": "1", "gubun": "gubun1", "article": "article2", "base": "base7", "complice": "complice7", "weight": "600", "svhc": "600", "export_amt": "60000"},
					{"head": "2-1", "level": "2", "gubun": "gubun1", "article": "article2", "base": "base8", "complice": "complice8", "weight": "200", "svhc": "200", "export_amt": "20000"},
					{"head": "2-1-1", "level": "3", "gubun": "gubun1", "article": "article2", "base": "base9", "complice": "complice9", "weight": "200", "svhc": "200", "export_amt": "20000"},
					{"head": "2-1-1-1", "level": "4", "gubun": "gubun2", "article": "article3", "base": "base10", "complice": "complice10", "weight": "100", "svhc": "100", "export_amt": "10000"},
					{"head": "2-1-1-2", "level": "4", "gubun": "gubun2", "article": "article3", "base": "base11", "complice": "complice11", "weight": "100", "svhc": "100", "export_amt": "10000"},
					{"head": "2-2", "level": "2", "gubun": "gubun2", "article": "article3", "base": "base12", "complice": "complice12", "weight": "400", "svhc": "400", "export_amt": "40000"},
					{"head": "2-2-1", "level": "3", "gubun": "gubun2", "article": "article3", "base": "base13", "complice": "complice13", "weight": "100", "svhc": "100", "export_amt": "10000"},
					{"head": "2-2-1-1", "level": "4", "gubun": "gubun2", "article": "article3", "base": "base14", "complice": "complice14", "weight": "100", "svhc": "100", "export_amt": "10000"},
					{"head": "2-2-2", "level": "3", "gubun": "gubun2", "article": "article4", "base": "base15", "complice": "complice15", "weight": "300", "svhc": "300", "export_amt": "30000"},
					{"head": "2-2-2-1", "level": "4", "gubun": "gubun2", "article": "article4", "base": "base16", "complice": "complice16", "weight": "100", "svhc": "100", "export_amt": "10000"},
					{"head": "2-2-2-2", "level": "4", "gubun": "gubun2", "article": "article4", "base": "base17", "complice": "complice17", "weight": "100", "svhc": "100", "export_amt": "10000"},
					{"head": "2-2-2-3", "level": "4", "gubun": "gubun2", "article": "article4", "base": "base18", "complice": "complice18", "weight": "100", "svhc": "100", "export_amt": "10000"},
					{"head": "3", "level": "1", "gubun": "gubun2", "article": "article4", "base": "base19", "complice": "complice19", "weight": "7000", "svhc": "1400", "export_amt": "70000"},
					{"head": "3-1", "level": "2", "gubun": "gubun2", "article": "article4", "base": "base20", "complice": "complice20", "weight": "4000", "svhc": "800", "export_amt": "40000"},
					{"head": "3-1-1", "level": "3", "gubun": "gubun3", "article": "article4", "base": "base21", "complice": "complice21", "weight": "2000", "svhc": "400", "export_amt": "20000"},
					{"head": "3-1-1-1", "level": "4", "gubun": "gubun3", "article": "article4", "base": "base22", "complice": "complice22", "weight": "1000", "svhc": "200", "export_amt": "10000"},
					{"head": "3-1-1-2", "level": "4", "gubun": "gubun3", "article": "article4", "base": "base23", "complice": "complice23", "weight": "1000", "svhc": "200", "export_amt": "10000"},
					{"head": "3-1-2", "level": "3", "gubun": "gubun3", "article": "article4", "base": "base24", "complice": "complice24", "weight": "2000", "svhc": "400", "export_amt": "20000"},
					{"head": "3-1-2-1", "level": "4", "gubun": "gubun3", "article": "article5", "base": "base25", "complice": "complice25", "weight": "1000", "svhc": "200", "export_amt": "10000"},
					{"head": "3-1-2-2", "level": "4", "gubun": "gubun3", "article": "article5", "base": "base26", "complice": "complice26", "weight": "1000", "svhc": "200", "export_amt": "10000"},
					{"head": "3-2", "level": "2", "gubun": "gubun3", "article": "article5", "base": "base27", "complice": "complice27", "weight": "1000", "svhc": "200", "export_amt": "10000"},
					{"head": "3-3", "level": "2", "gubun": "gubun3", "article": "article5", "base": "base28", "complice": "complice28", "weight": "2000", "svhc": "400", "export_amt": "20000"},
					{"head": "3-3-1", "level": "3", "gubun": "gubun3", "article": "article5", "base": "base29", "complice": "complice29", "weight": "1000", "svhc": "200", "export_amt": "10000"},
					{"head": "3-3-2", "level": "3", "gubun": "gubun3", "article": "article5", "base": "base30", "complice": "complice30", "weight": "1000", "svhc": "200", "export_amt": "10000"},
					{"head": "4", "level": "1", "gubun": "gubun3", "article": "article5", "base": "base31", "complice": "complice31", "weight": "1000", "svhc": "200", "export_amt": "10000"},
					{"head": "4-1", "level": "2", "gubun": "gubun4", "article": "article6", "base": "base32", "complice": "complice32", "weight": "1000", "svhc": "200", "export_amt": "10000"},
					{"head": "5", "level": "1", "gubun": "gubun4", "article": "article6", "base": "base33", "complice": "complice33", "weight": "2000", "svhc": "400", "export_amt": "20000"},
					{"head": "5-1", "level": "2", "gubun": "gubun4", "article": "article6", "base": "base34", "complice": "complice34", "weight": "1000", "svhc": "200", "export_amt": "10000"},
					{"head": "5-1-1", "level": "3", "gubun": "gubun4", "article": "article6", "base": "base35", "complice": "complice35", "weight": "1000", "svhc": "200", "export_amt": "10000"},
					{"head": "5-1-1-1", "level": "4", "gubun": "gubun4", "article": "article6", "base": "base36", "complice": "complice36", "weight": "1000", "svhc": "200", "export_amt": "10000"},
					{"head": "5-2", "level": "2", "gubun": "gubun4", "article": "article6", "base": "base37", "complice": "complice37", "weight": "1000", "svhc": "200", "export_amt": "10000"},
					{"head": "6", "level": "1", "gubun": "gubun4", "article": "article6", "base": "base38", "complice": "complice38", "weight": "1000", "svhc": "200", "export_amt": "10000"},
					{"head": "6-1", "level": "2", "gubun": "gubun4", "article": "article6", "base": "base39", "complice": "complice39", "weight": "1000", "svhc": "200", "export_amt": "10000"},
					{"head": "6-1-1", "level": "3", "gubun": "gubun4", "article": "article6", "base": "base40", "complice": "complice40", "weight": "1000", "svhc": "200", "export_amt": "10000"}
				]
			});
			app.register(dataSet_1);
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var grid_1 = new cpr.controls.Grid("grd1");
			grid_1.init({
				"dataSet": app.lookup("dstree"),
				"bufferedScroll": false,
				"columnResizable": true,
				"collapsible": true,
				"columns": [
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"}
				],
				"header": {
					"rows": [{"height": "24px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.text = "head";
								cell.style.css({
									"text-align" : "center"
								});
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.text = "gubun";
								cell.style.css({
									"text-align" : "center"
								});
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
								cell.sortColumnName = "article";
								cell.text = "article";
								cell.style.css({
									"text-align" : "center"
								});
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 3},
							"configurator": function(cell){
								cell.text = "base";
								cell.style.css({
									"text-align" : "center"
								});
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 4},
							"configurator": function(cell){
								cell.text = "complice";
								cell.style.css({
									"text-align" : "center"
								});
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 5},
							"configurator": function(cell){
								cell.text = "weight";
								cell.style.css({
									"text-align" : "center"
								});
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 6},
							"configurator": function(cell){
								cell.text = "svhc";
								cell.style.css({
									"text-align" : "center"
								});
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 7},
							"configurator": function(cell){
								cell.text = "export_amt";
								cell.style.css({
									"text-align" : "center"
								});
							}
						}
					]
				},
				"detail": {
					"rows": [{"height": "24px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.columnName = "head";
								cell.control = (function(){
									var treeCell_1 = new cpr.controls.gridpart.renderer.TreeCell();
									treeCell_1.indent = 10;
									treeCell_1.bind("level").toDataColumn("level");
									treeCell_1.bind("value").toDataColumn("head");
									return treeCell_1;
								})();
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.columnName = "gubun";
								cell.control = (function(){
									var inputBox_1 = new cpr.controls.InputBox("ipb1");
									inputBox_1.bind("value").toDataColumn("gubun");
									return inputBox_1;
								})();
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
								cell.columnName = "article";
								cell.control = (function(){
									var inputBox_2 = new cpr.controls.InputBox("ipb2");
									inputBox_2.bind("value").toDataColumn("article");
									return inputBox_2;
								})();
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 3},
							"configurator": function(cell){
								cell.columnName = "base";
								cell.control = (function(){
									var inputBox_3 = new cpr.controls.InputBox("ipb3");
									inputBox_3.bind("value").toDataColumn("base");
									return inputBox_3;
								})();
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 4},
							"configurator": function(cell){
								cell.columnName = "complice";
								cell.control = (function(){
									var inputBox_4 = new cpr.controls.InputBox("ipb4");
									inputBox_4.bind("value").toDataColumn("complice");
									return inputBox_4;
								})();
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 5},
							"configurator": function(cell){
								cell.columnName = "weight";
								cell.style.css({
									"text-align" : "right"
								});
								cell.control = (function(){
									var numberEditor_1 = new cpr.controls.NumberEditor("nbe1");
									numberEditor_1.format = "000,000,000";
									numberEditor_1.autoSelect = true;
									numberEditor_1.style.css({
										"text-align" : "right"
									});
									numberEditor_1.bind("value").toDataColumn("weight");
									return numberEditor_1;
								})();
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 6},
							"configurator": function(cell){
								cell.columnName = "svhc";
								cell.style.css({
									"text-align" : "right"
								});
								cell.control = (function(){
									var numberEditor_2 = new cpr.controls.NumberEditor("nbe2");
									numberEditor_2.format = "000,000,000";
									numberEditor_2.autoSelect = true;
									numberEditor_2.style.css({
										"text-align" : "right"
									});
									numberEditor_2.bind("value").toDataColumn("svhc");
									return numberEditor_2;
								})();
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 7},
							"configurator": function(cell){
								cell.columnName = "export_amt";
								cell.style.css({
									"text-align" : "right"
								});
								cell.control = (function(){
									var numberEditor_3 = new cpr.controls.NumberEditor("nbe3");
									numberEditor_3.format = "000,000,000";
									numberEditor_3.autoSelect = true;
									numberEditor_3.style.css({
										"text-align" : "right"
									});
									numberEditor_3.bind("value").toDataColumn("export_amt");
									return numberEditor_3;
								})();
							}
						}
					]
				}
			});
			if(typeof onGrd1ContextValueChange == "function") {
				grid_1.addEventListener("context-value-change", onGrd1ContextValueChange);
			}
			if(typeof onGrd1CellClick == "function") {
				grid_1.addEventListener("cell-click", onGrd1CellClick);
			}
			container.addChild(grid_1, {
				"top": "125px",
				"right": "10px",
				"bottom": "10px",
				"left": "10px"
			});
			
			var userDefinedControl_1 = new udc.pagetitle2();
			userDefinedControl_1.bind("title").toAppProperty("title");
			userDefinedControl_1.bind("explain").toAppProperty("explain");
			container.addChild(userDefinedControl_1, {
				"top": "10px",
				"right": "10px",
				"left": "10px",
				"height": "70px"
			});
			
			var group_1 = new cpr.controls.Container();
			// Layout
			var formLayout_1 = new cpr.controls.layouts.FormLayout();
			formLayout_1.setColumns(["1fr", "100px"]);
			formLayout_1.setRows(["1fr"]);
			group_1.setLayout(formLayout_1);
			(function(container){
				var numberEditor_4 = new cpr.controls.NumberEditor("treegrid_nbe");
				numberEditor_4.spinButton = false;
				numberEditor_4.placeholder = "로우인덱스";
				numberEditor_4.format = "999";
				numberEditor_4.style.css({
					"text-align" : "center"
				});
				container.addChild(numberEditor_4, {
					"colIndex": 0,
					"rowIndex": 0
				});
				var button_1 = new cpr.controls.Button("btn1");
				button_1.value = "열기 / 닫기";
				if(typeof onBtn1Click == "function") {
					button_1.addEventListener("click", onBtn1Click);
				}
				container.addChild(button_1, {
					"colIndex": 1,
					"rowIndex": 0
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "90px",
				"left": "10px",
				"width": "250px",
				"height": "25px"
			});
		}
	});
	app.title = "treegrid";
	cpr.core.Platform.INSTANCE.register(app);
})();
