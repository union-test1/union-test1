/*
 * App URI: example/grid/grid_getBindInfo
 * Source Location: example/grid/grid_getBindInfo.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("example/grid/grid_getBindInfo", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			
			/*
			 * 그리드에서 cell-click 이벤트 발생 시 호출.
			 * Grid의 Cell 클릭시 발생하는 이벤트.
			 */
			function onGrdMainCellClick(/* cpr.events.CGridEvent */ e){
				/** 
				 * @type cpr.controls.Grid
				 */
				var grdMain = e.control;
				
				// 선택된 cell 정보를 배열로 반환합니다.
				var selectCell = grdMain.getSelectedCellIndices()[0];
				
				// 선택된 cell의 컬럼을 반환합니다.
				var detailColumn = grdMain.detail.getColumn(selectCell.cellIndex);
				
				// 선택된 GridColumn 배열을 반환합니다.
				var headerColumn = grdMain.header.getColumnByColIndex(detailColumn.colIndex, detailColumn.colSpan);
				
				var grdDetailControl = grdMain.detail.getControl(selectCell.cellIndex);
				var bindInfo = grdDetailControl.getBindInfo("value");
				alert("["+(selectCell.cellIndex+1)+"]"+"의 바인드 된 컨트롤 "+"["+grdDetailControl.type+"]"+" 속성 정보는 "+JSON.stringify(bindInfo)+" 입니다.");
			};
			// End - User Script
			
			// Header
			app.declareBindableAppProperty("title", null);
			app.declareBindableAppProperty("explain", null);
			var dataSet_1 = new cpr.data.DataSet("ds_list");
			dataSet_1.parseData({
				"columns": [
					{"name": "column1"},
					{"name": "column2"},
					{"name": "column3"},
					{"name": "column4"},
					{"name": "column5"}
				],
				"rows": [
					{"column1": "column11", "column2": "column21", "column3": "column31", "column4": "column41", "column5": "column51"},
					{"column1": "column12", "column2": "column22", "column3": "column32", "column4": "column42", "column5": "column52"},
					{"column1": "column13", "column2": "column23", "column3": "column33", "column4": "column43", "column5": "column53"},
					{"column1": "column14", "column2": "column24", "column3": "column34", "column4": "column44", "column5": "column54"},
					{"column1": "column15", "column2": "column25", "column3": "column35", "column4": "column45", "column5": "column55"},
					{"column1": "column16", "column2": "column26", "column3": "column36", "column4": "column46", "column5": "column56"},
					{"column1": "column17", "column2": "column27", "column3": "column37", "column4": "column47", "column5": "column57"},
					{"column1": "column18", "column2": "column28", "column3": "column38", "column4": "column48", "column5": "column58"},
					{"column1": "column19", "column2": "column29", "column3": "column39", "column4": "column49", "column5": "column59"},
					{"column1": "column110", "column2": "column210", "column3": "column310", "column4": "column410", "column5": "column510"},
					{"column1": "column111", "column2": "column211", "column3": "column311", "column4": "column411", "column5": "column511"},
					{"column1": "column112", "column2": "column212", "column3": "column312", "column4": "column412", "column5": "column512"},
					{"column1": "column113", "column2": "column213", "column3": "column313", "column4": "column413", "column5": "column513"},
					{"column1": "column114", "column2": "column214", "column3": "column314", "column4": "column414", "column5": "column514"},
					{"column1": "column115", "column2": "column215", "column3": "column315", "column4": "column415", "column5": "column515"},
					{"column1": "column116", "column2": "column216", "column3": "column316", "column4": "column416", "column5": "column516"},
					{"column1": "column117", "column2": "column217", "column3": "column317", "column4": "column417", "column5": "column517"},
					{"column1": "column118", "column2": "column218", "column3": "column318", "column4": "column418", "column5": "column518"},
					{"column1": "column119", "column2": "column219", "column3": "column319", "column4": "column419", "column5": "column519"},
					{"column1": "column120", "column2": "column220", "column3": "column320", "column4": "column420", "column5": "column520"},
					{"column1": "column121", "column2": "column221", "column3": "column321", "column4": "column421", "column5": "column521"}
				]
			});
			app.register(dataSet_1);
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 800px) and (max-width: 1023px)", "new-screen");
			app.supportMedia("all and (min-width: 500px) and (max-width: 799px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container();
			// Layout
			var formLayout_1 = new cpr.controls.layouts.FormLayout();
			formLayout_1.setColumns(["1fr"]);
			formLayout_1.setRows(["1fr"]);
			group_1.setLayout(formLayout_1);
			(function(container){
				var grid_1 = new cpr.controls.Grid("grdMain");
				grid_1.readOnly = true;
				grid_1.init({
					"dataSet": app.lookup("ds_list"),
					"selectionUnit": "cell",
					"columns": [
						{"width": "100px"},
						{"width": "100px"},
						{"width": "100px"},
						{"width": "100px"},
						{"width": "100px"}
					],
					"header": {
						"rows": [{"height": "24px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.text = "column1";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.text = "column2";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.text = "column3";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.text = "column4";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.text = "column5";
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "24px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnName = "column1";
									cell.control = (function(){
										var checkBox_1 = new cpr.controls.CheckBox("cbx1");
										checkBox_1.text = "Check";
										checkBox_1.bind("value").toDataColumn("column1");
										return checkBox_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnName = "column2";
									cell.control = (function(){
										var output_1 = new cpr.controls.Output();
										output_1.value = "Output";
										output_1.bind("value").toDataColumn("column2");
										return output_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "column3";
									cell.control = (function(){
										var inputBox_1 = new cpr.controls.InputBox("ipb1");
										inputBox_1.bind("value").toDataColumn("column3");
										return inputBox_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "column4";
									cell.control = (function(){
										var numberEditor_1 = new cpr.controls.NumberEditor("nbe1");
										numberEditor_1.bind("value").toDataColumn("column4");
										return numberEditor_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "column5";
									cell.control = (function(){
										var button_1 = new cpr.controls.Button();
										button_1.value = "Button";
										button_1.bind("value").toDataColumn("column5");
										return button_1;
									})();
								}
							}
						]
					}
				});
				if(typeof onGrdMainCellClick == "function") {
					grid_1.addEventListener("cell-click", onGrdMainCellClick);
				}
				container.addChild(grid_1, {
					"colIndex": 0,
					"rowIndex": 0,
					"colSpan": 1,
					"rowSpan": 1
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "70px",
				"right": "10px",
				"bottom": "10px",
				"left": "10px"
			});
			
			var userDefinedControl_1 = new udc.pagetitle2();
			userDefinedControl_1.bind("title").toAppProperty("title");
			userDefinedControl_1.bind("explain").toAppProperty("explain");
			container.addChild(userDefinedControl_1, {
				"top": "10px",
				"right": "10px",
				"left": "10px",
				"height": "50px"
			});
		}
	});
	app.title = "grid_getBindInfo";
	cpr.core.Platform.INSTANCE.register(app);
})();
